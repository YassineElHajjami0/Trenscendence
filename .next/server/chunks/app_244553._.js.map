{
  "version": 3,
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/Atoms/friendAtom.ts"],"sourcesContent":["import { atom } from \"recoil\";\nexport const slctdFriend = atom({\n  key: \"selectedFriend\",\n  default: Number(localStorage.getItem(\"selectedFriend\")) || -1,\n});\n"],"names":[],"mappings":";;;;;;AACO,MAAM,cAAc,8IAAK;IAC9B,KAAK;IACL,SAAS,OAAO,aAAa,OAAO,CAAC,sBAAsB,CAAC;AAC9D"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/chat/Friends/FriendChat.tsx"],"sourcesContent":["import React from \"react\";\nimport \"./FriendChat.css\";\nimport Image from \"next/image\";\n\nimport { slctdFriend } from \"../../Atoms/friendAtom\";\nimport { useRecoilState } from \"recoil\";\n\ninterface FriendChatProps {\n  friendData: any;\n}\n\nconst FriendChat: React.FC<FriendChatProps> = ({ friendData }) => {\n  const [selectedFriend, setSelectedFriend] = useRecoilState(slctdFriend);\n\n  return (\n    <div\n      onClick={() => setSelectedFriend(friendData.uid)}\n      className=\"friend_chat_container\"\n    >\n      <div className=\"chat_list_avatar_container\">\n        <Image\n          className=\"chat_list_avatar\"\n          src={friendData?.avatar}\n          width={2000}\n          height={2000}\n          alt=\"avatar\"\n        />\n        <span\n          className={`status_dot ${\n            friendData?.status === \"online\" && \"logged\"\n          }  ${friendData?.status === \"ingame\" && \"ingame\"}`}\n        ></span>\n      </div>\n      <div className=\"chat_list_name\">\n        <h1>{friendData?.name}</h1>\n        <h4>{friendData?.lastMSG}</h4>\n      </div>\n    </div>\n  );\n};\nexport default FriendChat;\n"],"names":[],"mappings":";;;;;;;;;;;;;AAWA,MAAM,aAAwC,CAAC,EAAE,UAAU,EAAE;IAC3D,MAAM,CAAC,gBAAgB,kBAAkB,GAAG;IAE5C,qBACE,mPAAC;QACC,SAAS,IAAM,kBAAkB,WAAW,GAAG;QAC/C,WAAU;;0BAEV,mPAAC;gBAAI,WAAU;;kCACb;wBACE,WAAU;wBACV,KAAK,YAAY;wBACjB,OAAO;wBACP,QAAQ;wBACR,KAAI;;;;;;kCAEN,mPAAC;wBACC,WAAW,CAAC,WAAW,EACrB,YAAY,WAAW,YAAY,SACpC,EAAE,EAAE,YAAY,WAAW,YAAY,SAAS,CAAC;;;;;;;;;;;;0BAGtD,mPAAC;gBAAI,WAAU;;kCACb,mPAAC;kCAAI,YAAY;;;;;;kCACjB,mPAAC;kCAAI,YAAY;;;;;;;;;;;;;;;;;;AAIzB;uCACe"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/chat/Friends/FriendsChat.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./FriendsChat.css\";\nimport FriendChat from \"./FriendChat\";\nimport friendData from \"../../data/friends.json\";\nimport { FriendData } from \"@/app/Interfaces/friendDataInterface\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { loggedUser } from \"@/app/Atoms/logged\";\nimport { slctdFriend } from \"@/app/Atoms/friendAtom\";\nimport { mheaders } from \"@/app/util/headers\";\nimport { userToken } from \"@/app/Atoms/userToken\";\n\nexport default function FriendsChat() {\n  const loggedUserUID = useRecoilValue(loggedUser);\n  const userTok = useRecoilValue(userToken);\n  const [myFriends, setMyFriends] = useState([]);\n  const getMyFriends = async () => {\n    try {\n      const response = await fetch(\n        `http://localhost:3000/friends/${loggedUserUID}`,\n        {\n          headers: {\n            Authorization: `Bearer ${userTok}`,\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      if (!response) {\n        console.log(\"Error000\");\n      }\n      const data = await response.json();\n      console.log(\"------->my friends\", data);\n\n      setMyFriends(data);\n    } catch (error) {\n      console.log(\"Error111\");\n    }\n  };\n  useEffect(() => {\n    getMyFriends();\n  }, []);\n\n  // const friend_data: FriendData[] = friendData;\n  // const sortedFriends = friend_data.sort((a: FriendData, b: FriendData) => {\n  //   const onlineComparison =\n  //     (b.status === \"online\" ? 1 : 0) - (a.status === \"online\" ? 1 : 0);\n  //   const ingameComparison =\n  //     (b.status === \"ingame\" ? 1 : 0) - (a.status === \"ingame\" ? 1 : 0);\n  //   return onlineComparison || ingameComparison;\n  // });\n\n  return (\n    <div className=\"friends_chat_container\">\n      {myFriends.length &&\n        myFriends.map((f: any) => <FriendChat key={f?.uid} friendData={f} />)}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAWe,SAAS;IACtB,MAAM,gBAAgB;IACtB,MAAM,UAAU;IAChB,MAAM,CAAC,WAAW,aAAa,GAAG,4NAAS,EAAE;IAC7C,MAAM,eAAe;QACnB,IAAI;YACF,MAAM,WAAW,MAAM,MACrB,CAAC,8BAA8B,EAAE,cAAc,CAAC,EAChD;gBACE,SAAS;oBACP,eAAe,CAAC,OAAO,EAAE,QAAQ,CAAC;oBAClC,gBAAgB;gBAClB;YACF;YAEF,IAAI,CAAC,UAAU;gBACb,QAAQ,GAAG,CAAC;YACd;YACA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,QAAQ,GAAG,CAAC,sBAAsB;YAElC,aAAa;QACf,EAAE,OAAO,OAAO;YACd,QAAQ,GAAG,CAAC;QACd;IACF;IACA,6NAAU;QACR;IACF,GAAG,EAAE;IAEL,gDAAgD;IAChD,6EAA6E;IAC7E,6BAA6B;IAC7B,yEAAyE;IACzE,6BAA6B;IAC7B,yEAAyE;IACzE,iDAAiD;IACjD,MAAM;IAEN,qBACE,mPAAC;QAAI,WAAU;kBACZ,UAAU,MAAM,IACf,UAAU,GAAG,CAAC,CAAC,kBAAW;gBAAyB,YAAY;eAApB,GAAG;;;;;;;;;;AAGtD"}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/chat/Channels/channelChat.tsx"],"sourcesContent":["import React from \"react\";\nimport ChannelsList from \"../../data/channels_list.json\";\nimport Image from \"next/image\";\nimport \"./channelChat.css\";\nimport { IoArrowBackOutline } from \"react-icons/io5\";\nimport { AiOutlineUsergroupAdd } from \"react-icons/ai\";\n\ninterface channelChatProps {\n  setSelectedChannel: React.Dispatch<React.SetStateAction<number>>;\n  setShowPopUpCreateChannel: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst channelChat: React.FC<channelChatProps> = ({\n  setSelectedChannel,\n  setShowPopUpCreateChannel,\n}) => {\n  return (\n    <>\n      <div className=\"channelsListContainer\">\n        {ChannelsList.map((e) => {\n          return (\n            <div\n              key={e.channel_id}\n              className=\"channelContainer\"\n              onClick={() => {\n                setSelectedChannel(e.channel_id);\n              }}\n            >\n              <div className=\"imageContainer\">\n                <Image\n                  className=\"channelImage\"\n                  src={e.avatar}\n                  width={80}\n                  height={80}\n                  alt=\"avatar\"\n                />\n              </div>\n              <div className=\"name_lastmsg\">\n                <p>\n                  {e.channel_name.length > 10\n                    ? `${e.channel_name.substring(0, 10)}..`\n                    : e.channel_name}\n                </p>\n                <span>\n                  {e.lastmsg.length > 10\n                    ? `${e.lastmsg.substring(0, 10)}..`\n                    : e.lastmsg}\n                </span>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <div\n        className=\"addChannelBtn\"\n        onClick={() => setShowPopUpCreateChannel(true)}\n      >\n        <AiOutlineUsergroupAdd />\n      </div>\n    </>\n  );\n};\n\nexport default channelChat;\n"],"names":[],"mappings":";;;;;;;;;;;;;AAYA,MAAM,cAA0C,CAAC,EAC/C,kBAAkB,EAClB,yBAAyB,EAC1B;IACC,qBACE;;0BACE,mPAAC;gBAAI,WAAU;0BACZ,gHAAa,GAAG,CAAC,CAAC;oBACjB,qBACE,mPAAC;wBAEC,WAAU;wBACV,SAAS;4BACP,mBAAmB,EAAE,UAAU;wBACjC;;0CAEA,mPAAC;gCAAI,WAAU;0CACb,cAAA;oCACE,WAAU;oCACV,KAAK,EAAE,MAAM;oCACb,OAAO;oCACP,QAAQ;oCACR,KAAI;;;;;;;;;;;0CAGR,mPAAC;gCAAI,WAAU;;kDACb,mPAAC;kDACE,EAAE,YAAY,CAAC,MAAM,GAAG,KACrB,CAAC,EAAE,EAAE,YAAY,CAAC,SAAS,CAAC,GAAG,IAAI,EAAE,CAAC,GACtC,EAAE,YAAY;;;;;;kDAEpB,mPAAC;kDACE,EAAE,OAAO,CAAC,MAAM,GAAG,KAChB,CAAC,EAAE,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,IAAI,EAAE,CAAC,GACjC,EAAE,OAAO;;;;;;;;;;;;;uBAxBZ,EAAE,UAAU;;;;;gBA6BvB;;;;;;0BAEF,mPAAC;gBACC,WAAU;gBACV,SAAS,IAAM,0BAA0B;0BAEzC,cAAA;;;;;;;;;;;;AAIR;uCAEe"}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/chat/Channels/SelectedChannelChat.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Image from \"next/image\";\nimport ChannelData from \"../../data/channels_list.json\";\nimport { CHANNEL_DATA } from \"@/app/Interfaces/channelDataInterface\";\nimport { IoIosSend } from \"react-icons/io\";\nimport { IoArrowBackOutline } from \"react-icons/io5\";\n\nimport \"./channelChat.css\";\n\nconst SelectedChannelChat = ({\n  selectedChannel,\n  setSelectedChannel,\n}: {\n  selectedChannel: number;\n  setSelectedChannel: React.Dispatch<React.SetStateAction<number>>;\n}) => {\n  const [chToDisplay, setChToDisplay] = useState<CHANNEL_DATA | undefined>();\n  useEffect(() => {\n    let channelToDisplay: CHANNEL_DATA | undefined = ChannelData.find(\n      (ch) => ch.channel_id === selectedChannel\n    );\n    setChToDisplay(channelToDisplay);\n  }, [selectedChannel]);\n\n  const returnMsgTime = (time: number): string => {\n    console.log(time);\n    const date = new Date(time * 1000);\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const result: string = \"\" + hours + \":\" + minutes;\n    return result;\n  };\n  return (\n    <div className=\"channel_msg_section\">\n      <div className=\"channel_msg_section_header\">\n        <IoArrowBackOutline\n          style={{ width: \"20px\", margin: \"5px\" }}\n          className=\"arrow_back\"\n          onClick={() => setSelectedChannel(-1)}\n        />\n        <Image\n          className=\"channel_msg_section_header_avatar\"\n          src={chToDisplay?.avatar ?? \"/default.png\"}\n          width={100}\n          height={100}\n          alt=\"avatar\"\n        />\n        <div>\n          <h3 style={{ display: \"block\" }}>{chToDisplay?.channel_name}</h3>\n          <p>{chToDisplay?.members_number} member</p>\n        </div>\n      </div>\n      <div className=\"channel_msg_section_chat\">\n        {chToDisplay?.messages.map((e) => {\n          return e.recipient ? (\n            <div className=\"channelMsgContainerRecipient\" key={e.time}>\n              <div className=\"msgAndTime\">\n                <p className=\"channelMsg\">{e.msg}</p>\n                <p className=\"msgTime\">{returnMsgTime(e.time)}</p>\n              </div>\n            </div>\n          ) : (\n            <div className=\"channelMsgContainer\" key={e.time}>\n              <Image\n                className=\"senderOrRecieverImage\"\n                src={e.avatar}\n                width={30}\n                height={30}\n                alt=\"PIC\"\n              />\n              <div className=\"msgAndTime\">\n                <p className=\"channelMsg\">{e.msg}</p>\n                <p className=\"msgTime\">{returnMsgTime(e.time)}</p>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"channel_msg_section_input\">\n        <input\n          type=\"text\"\n          onKeyDown={(e) => {\n            if (e.key == \"Enter\") console.log(\"subbmitted !\");\n          }}\n        />\n        <IoIosSend className=\"sendIcon\" />\n      </div>\n    </div>\n  );\n};\n\nexport default SelectedChannelChat;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AASA,MAAM,sBAAsB,CAAC,EAC3B,eAAe,EACf,kBAAkB,EAInB;IACC,MAAM,CAAC,aAAa,eAAe,GAAG;IACtC,6NAAU;QACR,IAAI,mBAA6C,gHAAY,IAAI,CAC/D,CAAC,KAAO,GAAG,UAAU,KAAK;QAE5B,eAAe;IACjB,GAAG;QAAC;KAAgB;IAEpB,MAAM,gBAAgB,CAAC;QACrB,QAAQ,GAAG,CAAC;QACZ,MAAM,OAAO,IAAI,KAAK,OAAO;QAC7B,MAAM,QAAQ,KAAK,QAAQ;QAC3B,MAAM,UAAU,KAAK,UAAU;QAC/B,MAAM,SAAiB,KAAK,QAAQ,MAAM;QAC1C,OAAO;IACT;IACA,qBACE,mPAAC;QAAI,WAAU;;0BACb,mPAAC;gBAAI,WAAU;;kCACb;wBACE,OAAO;4BAAE,OAAO;4BAAQ,QAAQ;wBAAM;wBACtC,WAAU;wBACV,SAAS,IAAM,mBAAmB,CAAC;;;;;;kCAErC;wBACE,WAAU;wBACV,KAAK,aAAa,UAAU;wBAC5B,OAAO;wBACP,QAAQ;wBACR,KAAI;;;;;;kCAEN,mPAAC;;0CACC,mPAAC;gCAAG,OAAO;oCAAE,SAAS;gCAAQ;0CAAI,aAAa;;;;;;0CAC/C,mPAAC;;oCAAG,aAAa;oCAAe;;;;;;;;;;;;;;;;;;;0BAGpC,mPAAC;gBAAI,WAAU;0BACZ,aAAa,SAAS,IAAI,CAAC;oBAC1B,OAAO,EAAE,SAAS,iBAChB,mPAAC;wBAAI,WAAU;kCACb,cAAA,mPAAC;4BAAI,WAAU;;8CACb,mPAAC;oCAAE,WAAU;8CAAc,EAAE,GAAG;;;;;;8CAChC,mPAAC;oCAAE,WAAU;8CAAW,cAAc,EAAE,IAAI;;;;;;;;;;;;uBAHG,EAAE,IAAI;;;;6CAOzD,mPAAC;wBAAI,WAAU;;0CACb;gCACE,WAAU;gCACV,KAAK,EAAE,MAAM;gCACb,OAAO;gCACP,QAAQ;gCACR,KAAI;;;;;;0CAEN,mPAAC;gCAAI,WAAU;;kDACb,mPAAC;wCAAE,WAAU;kDAAc,EAAE,GAAG;;;;;;kDAChC,mPAAC;wCAAE,WAAU;kDAAW,cAAc,EAAE,IAAI;;;;;;;;;;;;;uBAVN,EAAE,IAAI;;;;;gBAcpD;;;;;;0BAEF,mPAAC;gBAAI,WAAU;;kCACb,mPAAC;wBACC,MAAK;wBACL,WAAW,CAAC;4BACV,IAAI,EAAE,GAAG,IAAI,SAAS,QAAQ,GAAG,CAAC;wBACpC;;;;;;kCAEF;wBAAW,WAAU;;;;;;;;;;;;;;;;;;AAI7B;uCAEe"}},
    {"offset": {"line": 491, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 496, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/chat/Friends/FriendMSG.tsx"],"sourcesContent":["import React from \"react\";\nimport \"./FriendMSG.css\";\nimport { ChatMSG } from \"@/app/Interfaces/friendChat\";\nimport { useRecoilValue } from \"recoil\";\nimport { loggedUser } from \"@/app/Atoms/logged\";\nexport const FriendMSG = ({ message }: { message: any }) => {\n  const loggedU = useRecoilValue(loggedUser);\n\n  const options = { hour: \"2-digit\", minute: \"2-digit\" };\n  const date = new Date(message?.createdAT).toLocaleString(\n    \"en-US\",\n    options as Intl.DateTimeFormatOptions\n  );\n\n\n  // \"id\": 4,\n  //       \"userID\": 2,\n  //       \"channelID\": 21,\n  //       \"content\": \"wax nta f medrasa\",\n  //       \"createdAT\": \"2024-03-31T13:08:33.627Z\"\n\n  return (\n    <div className={`chat_msg_container ${message?.userID !== loggedU && \"sender\"}`}>\n      {message?.content}\n      <span\n        className={`friend_msg_time ${message?.userID !== loggedU && \"sender_time\"}`}\n      >\n        {date}\n      </span>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;;;AAKO,MAAM,YAAY,CAAC,EAAE,OAAO,EAAoB;IACrD,MAAM,UAAU;IAEhB,MAAM,UAAU;QAAE,MAAM;QAAW,QAAQ;IAAU;IACrD,MAAM,OAAO,IAAI,KAAK,SAAS,WAAW,cAAc,CACtD,SACA;IAIF,WAAW;IACX,qBAAqB;IACrB,yBAAyB;IACzB,wCAAwC;IACxC,gDAAgD;IAEhD,qBACE,mPAAC;QAAI,WAAW,CAAC,mBAAmB,EAAE,SAAS,WAAW,WAAW,SAAS,CAAC;;YAC5E,SAAS;0BACV,mPAAC;gBACC,WAAW,CAAC,gBAAgB,EAAE,SAAS,WAAW,WAAW,cAAc,CAAC;0BAE3E;;;;;;;;;;;;AAIT"}},
    {"offset": {"line": 538, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/chat/Friends/ChatContainer.tsx"],"sourcesContent":["import React from \"react\";\nimport { FriendMSG } from \"./FriendMSG\";\nimport \"./ChatContainer.css\";\nimport { FriendChatMSG } from \"@/app/Interfaces/friendChat\";\nexport const ChatContainer = ({ messages }: { messages: any}) => {\n  // const options = { month: \"long\", day: \"numeric\", year: \"numeric\" };\n  // const date = new Date(messages?.date).toLocaleString(\n  //   \"en-US\",\n  //   options as Intl.DateTimeFormatOptions\n  // );\n\n  return (\n    <div className=\"chat_container\">\n      {/* <h1 className=\"chat_todays_date\">{date}</h1> */}\n\n\n        <FriendMSG key={messages.createdAT} message={messages} />\n\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;AAIO,MAAM,gBAAgB,CAAC,EAAE,QAAQ,EAAoB;IAC1D,sEAAsE;IACtE,wDAAwD;IACxD,aAAa;IACb,0CAA0C;IAC1C,KAAK;IAEL,qBACE,mPAAC;QAAI,WAAU;kBAIX,cAAA;YAAoC,SAAS;WAA7B,SAAS,SAAS;;;;;;;;;;AAI1C"}},
    {"offset": {"line": 573, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 578, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/Atoms/currentFriend.ts"],"sourcesContent":["import { atom } from \"recoil\";\nimport { FriendData } from \"../Interfaces/friendDataInterface\";\nexport const currentFriend = atom<any>({\n  key: \"currentFriend\",\n  default: null,\n  //   dangerouslyAllowMutability: true,\n});\n"],"names":[],"mappings":";;;;;;AAEO,MAAM,gBAAgB,8IAAU;IACrC,KAAK;IACL,SAAS;AAEX"}},
    {"offset": {"line": 588, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 593, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/Atoms/channelId.ts"],"sourcesContent":["import { atom } from \"recoil\";\nimport { recoilPersist } from \"recoil-persist\";\n\nconst { persistAtom } = recoilPersist({\n  key: \"recoil-persist\",\n  storage: localStorage,\n});\nexport const channelId = atom<number>({\n  key: \"channelId\",\n  default: -1,\n  effects_UNSTABLE: [persistAtom],\n});\n"],"names":[],"mappings":";;;;;;;;AAGA,MAAM,EAAE,WAAW,EAAE,GAAG,oKAAc;IACpC,KAAK;IACL,SAAS;AACX;AACO,MAAM,YAAY,8IAAa;IACpC,KAAK;IACL,SAAS,CAAC;IACV,kBAAkB;QAAC;KAAY;AACjC"}},
    {"offset": {"line": 612, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 617, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/chat/Friends/FriendChatList.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport \"./FriendChatList.css\";\nimport { BiSolidJoystickAlt } from \"react-icons/bi\";\nimport { IoIosSend } from \"react-icons/io\";\nimport Image from \"next/image\";\nimport { IoArrowBackOutline } from \"react-icons/io5\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { ChatContainer } from \"./ChatContainer\";\nimport { slctdFriend } from \"@/app/Atoms/friendAtom\";\n\nimport { currentFriend } from \"@/app/Atoms/currentFriend\";\nimport { loggedUser } from \"@/app/Atoms/logged\";\nimport { channelId } from \"@/app/Atoms/channelId\";\nimport { userToken } from \"@/app/Atoms/userToken\";\nimport { io } from \"socket.io-client\";\nimport { RiEmojiStickerFill } from \"react-icons/ri\";\n\nimport Picker from \"emoji-picker-react\";\n\nconst socket = io(\"http://localhost:3001\");\nconst FriendChatList = () => {\n  const chatContainerRef = useRef<HTMLDivElement>(null);\n  const loggedU = useRecoilValue(loggedUser);\n  const userTok = useRecoilValue(userToken);\n\n  // const friends: FriendData[] = playerData;\n  // const myFriendChat: FriendChat[] = myFriendsChat;\n\n  const [selectedFriend, setSelectedFriend] = useRecoilState(slctdFriend);\n  const [friendChat, setFriendChat] = useState<any>([]);\n  const [friend, setFriend] = useRecoilState(currentFriend);\n  const [inputMSG, setInputMSG] = useState<string>(\"\");\n  const [channelID, setChannelID] = useRecoilState(channelId);\n  const [showEmoji, setShowEmoji] = useState(false);\n  // const [msgSent, setMsgSent] = useState<number>(-1);\n\n  const onEmojiClick = (event: any) => {\n    setInputMSG((prevInput) => prevInput + event.emoji);\n  };\n\n  useEffect(() => {\n    const handleReceiveMessage = (message: any) => {\n      console.log(\"socket----------->>>>\", message);\n      if (message?.channelID === channelID)\n        setFriendChat((prevMessages: any) => [...prevMessages, message]);\n    };\n    socket.on(\"message\", handleReceiveMessage);\n    return () => {\n      socket.off(\"message\");\n    };\n  }, []);\n\n  const getAllMSG = async (id: number) => {\n    console.log(\"--------id>>>>>>>>\", id);\n\n    if (id === -1) return;\n    const selectedFriendChat = await fetch(\n      `http://localhost:3000/message/${id}`,\n      {\n        headers: {\n          Authorization: `Bearer ${userTok}`,\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    const data = await selectedFriendChat.json();\n    if (data?.statusCode) return;\n    // console.log(\"message=========>>>>\", data);\n    setFriendChat(data);\n  };\n\n  useEffect(() => {\n    //get my friend data\n    // friends.find((f) => f.uid === selectedFriend);\n    const getMyFriendData = async () => {\n      /*----------------------------get my friend data------------------------------- */\n      const selectedFriendData = await fetch(\n        `http://localhost:3000/users/${selectedFriend}`,\n        {\n          headers: {\n            Authorization: `Bearer ${userTok}`,\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      const dataF = await selectedFriendData.json();\n      //set my friend data\n      setFriend(dataF);\n\n      /*---------------------------create a channel or get its id------------------- */\n      const channelData = {\n        name: \"\",\n        topic: \"\",\n        id: loggedU,\n        friendId: selectedFriend,\n      };\n      const createOrGetChannelID = await fetch(\n        \"http://localhost:3000/channels/dm\",\n        {\n          method: \"POST\",\n\n          headers: {\n            Authorization: `Bearer ${userTok}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(channelData),\n        }\n      );\n      const dataC = await createOrGetChannelID.json();\n      if (dataC?.statusCode || dataC === -1) return;\n      setChannelID(dataC);\n      getAllMSG(dataC);\n      setInputMSG(\"\");\n    };\n    getMyFriendData();\n  }, [selectedFriend]);\n\n  // useEffect(() => {\n  //   getAllMSG(channelID);\n  // }, [msgSent]);\n\n  const sendMSG = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (inputMSG.length === 0) return;\n    console.log(\"===========================channelid\", channelID);\n\n    const channelData = {\n      userID: loggedU,\n      channelID: channelID,\n      content: inputMSG,\n    };\n    const msg = await fetch(\"http://localhost:3000/message\", {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${userTok}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(channelData),\n    });\n\n    // const data = await msg.json();\n\n    setInputMSG(\"\");\n    setShowEmoji(false);\n  };\n\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop =\n        chatContainerRef.current.scrollHeight;\n    }\n  }, [friendChat]);\n\n  const isSameDay = (date1: number, date2: number): boolean => {\n    const getFormattedDate = (timestamp: number): string => {\n      const date = new Date(timestamp);\n      return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;\n    };\n\n    return getFormattedDate(date1) === getFormattedDate(date2);\n  };\n\n  // const sendMessage = (e: React.FormEvent<HTMLFormElement>) => {\n  //   e.preventDefault();\n  //   if (inputMSG.length === 0) return;\n  //   const currentDate = Date.now();\n  //   const message = {\n  //     time: Date.now() as number,\n  //     msg: inputMSG,\n  //     recipient: false,\n  //   };\n  //   const friendChatToUpdate: FriendChat = {\n  //     ...friendChat,\n  //     allmessages: friendChat?.allmessages || [],\n  //     uid: friendChat?.uid || \"\",\n  //   };\n  //   const lastMessage =\n  //     friendChatToUpdate?.allmessages[\n  //       friendChatToUpdate?.allmessages.length - 1\n  //     ];\n  //   if (lastMessage && isSameDay(lastMessage.date, currentDate))\n  //     lastMessage.messages.push(message);\n  //   else {\n  //     friendChatToUpdate?.allmessages.push({\n  //       date: currentDate as number,\n  //       messages: [message],\n  //     });\n  //   }\n  //   setFriendChat(friendChatToUpdate);\n  //   setInputMSG(\"\");\n  // };\n\n  return (\n    <div className=\"friend_chat_msg\">\n      <div className=\"friend_chat_msg_header\">\n        <IoArrowBackOutline\n          className=\"arrow_back\"\n          onClick={() => setSelectedFriend(-1)}\n        />\n\n        <Image\n          className=\"my_chat_msg_avatar\"\n          src={friend?.avatar || \"/avatar3.png\"}\n          width={2000}\n          height={2000}\n          alt=\"avatar\"\n        />\n        <div className=\"my_chat_msg_name\">\n          <h1>{friend?.username}</h1>\n          <h5\n            className={`online ${friend?.status === \"ingame\" && \"ingames\"}\n          ${friend?.status === \"offline\" && \"offline\"}\n          `}\n          >\n            {friend?.status === \"online\"\n              ? \"Online\"\n              : friend?.status === \"ingame\"\n              ? \"Playing\"\n              : \"Offline\"}\n          </h5>\n        </div>\n      </div>\n      <div ref={chatContainerRef} className=\"friend_chat_msg_body\">\n        {friendChat.map((m: any) => (\n          <ChatContainer key={m.createdAT} messages={m} />\n        ))}\n      </div>\n      <form onSubmit={sendMSG} className=\"friend_chat_msg_form\">\n        <fieldset disabled={friend?.blocked}>\n          <div\n            className=\"closed_picker\"\n            onClick={() => setShowEmoji((prev) => !prev)}\n          >\n            <RiEmojiStickerFill />\n          </div>\n          <Picker\n            emojiVersion=\"facebook\"\n            theme=\"dark\"\n            className={`emoji_picker ${showEmoji && \"show_Emoji\"} `}\n            searchDisabled={true}\n            open={true}\n            onEmojiClick={onEmojiClick}\n            lazyLoadEmojis={true}\n            previewConfig={{\n              showPreview: false,\n            }}\n          />\n\n          <input\n            value={inputMSG}\n            onChange={(e) => setInputMSG(e.target.value)}\n            className=\"input_msg\"\n            type=\"text\"\n            placeholder={`${\n              friend?.blocked ? \"You blocked this friend\" : \"Message\"\n            }`}\n          />\n\n          <div className=\"play_send_msg\">\n            <BiSolidJoystickAlt />\n            <button className=\"submit_msg\" type=\"submit\">\n              <IoIosSend />\n            </button>\n          </div>\n        </fieldset>\n      </form>\n    </div>\n  );\n};\n\nexport default FriendChatList;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 967, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 976, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/chat/Channels/channelInfo.tsx"],"sourcesContent":["import channelsData from \"../../data/channels_list.json\";\nimport { CHANNEL_DATA } from \"@/app/Interfaces/channelDataInterface\";\nimport PlayerData from \"../../data/player-info.json\";\nimport Image from \"next/image\";\nimport \"./channelChat.css\";\nimport { GiCancel } from \"react-icons/gi\";\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\n\ntype CHANNELUSER = {\n  id: number;\n  type: string;\n  name: string;\n  avatar: string;\n};\n\nconst ChannelInfo = ({ selectedChannel }: { selectedChannel: number }) => {\n  let selectedChannelData: CHANNEL_DATA | undefined = channelsData.find((e) => {\n    return e.channel_id === selectedChannel;\n  });\n  let channelOwner: CHANNELUSER | undefined = selectedChannelData?.members.find(\n    (e) => e.type == \"owner\"\n  );\n  let channelAdmins: CHANNELUSER[] | undefined =\n    selectedChannelData?.members.filter((e) => e.type == \"admin\");\n  let channelNormalUsers: CHANNELUSER[] | undefined =\n    selectedChannelData?.members.filter((e) => e.type == \"user\");\n  let myTypeInTheChannel = selectedChannelData?.members.find(\n    (e) => e.id === PlayerData.uid\n  );\n  const handleRemoveAdminClick = (id: number) => {};\n  const handleAdminClick = (id: number) => {};\n  const handleKickClick = (id: number) => {};\n  const handleBlockClick = (id: number) => {};\n  const handleMuteClick = (id: number) => {};\n  console.log(\"myTypeInTheChannel=>\", myTypeInTheChannel);\n  return (\n    <div className=\"selectedChannelData\">\n      <div className=\"ChannelImage\">\n        <Image\n          src={selectedChannelData?.avatar ?? \"/default.png\"}\n          width={100}\n          height={100}\n          alt=\"avatar\"\n        />\n      </div>\n      <h3 className=\"channelName\">{selectedChannelData?.channel_name}</h3>\n      <p className=\"topic\">{selectedChannelData?.topic}</p>\n\n      <div className=\"members\">\n        {channelOwner != undefined ? (\n          <div className=\"owner\">\n            <div className=\"imageNameContainer\">\n              <div className=\"userPic\">\n                <Image\n                  className=\"pic\"\n                  src={channelOwner.avatar}\n                  width={50}\n                  height={50}\n                  alt=\"avatar\"\n                />\n              </div>\n              <div className=\"name\">{channelOwner.name}</div>\n            </div>\n            <div className=\"status\">\n              <span className=\"type\">{channelOwner.type}</span>\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n        {channelAdmins?.map((adminUser) => {\n          return (\n            <div className=\"admin\" key={adminUser.id}>\n              <div className=\"imageNameContainer\">\n                <div className=\"userPic\">\n                  <Image\n                    className=\"pic\"\n                    src={adminUser.avatar}\n                    width={50}\n                    height={50}\n                    alt=\"avatar\"\n                  />\n                </div>\n                <div className=\"name\">{adminUser.name}</div>\n              </div>\n              <div className=\"status\">\n                <span className=\"type\">{adminUser.type}</span>\n                {myTypeInTheChannel?.type === \"owner\" ? (\n                  <>\n                    <span className=\"actionsBtn\">\n                      {myTypeInTheChannel?.type === \"owner\" ? (\n                        <BsThreeDotsVertical className=\"btn\" />\n                      ) : (\n                        \"\"\n                      )}\n                      <span className=\"actions\">\n                        <ul>\n                          <li>\n                            {myTypeInTheChannel?.type === \"owner\" ? (\n                              <li\n                                onClick={() =>\n                                  handleRemoveAdminClick(adminUser.id)\n                                }\n                              >\n                                Rm Admin\n                              </li>\n                            ) : (\n                              \"\"\n                            )}\n                          </li>\n                          <li onClick={() => handleKickClick(adminUser.id)}>\n                            kick\n                          </li>\n                          <li onClick={() => handleBlockClick(adminUser.id)}>\n                            Block\n                          </li>\n                          <li onClick={() => handleMuteClick(adminUser.id)}>\n                            Mute\n                          </li>\n                        </ul>\n                      </span>\n                    </span>\n                  </>\n                ) : (\n                  \"\"\n                )}\n              </div>\n            </div>\n          );\n        })}\n        {channelNormalUsers?.map((normalUser) => {\n          return (\n            <div className=\"user\" key={normalUser.id}>\n              <div className=\"imageNameContainer\">\n                <div className=\"userPic\">\n                  <Image\n                    className=\"pic\"\n                    src={normalUser.avatar}\n                    width={50}\n                    height={50}\n                    alt=\"avatar\"\n                  />\n                </div>\n                <div className=\"name\">{normalUser.name}</div>\n              </div>\n              <div className=\"actionsBtn\">\n                {myTypeInTheChannel?.type === \"owner\" ||\n                myTypeInTheChannel?.type === \"admin\" ? (\n                  <BsThreeDotsVertical />\n                ) : (\n                  \"\"\n                )}\n                {myTypeInTheChannel?.type === \"owner\" ||\n                myTypeInTheChannel?.type === \"admin\" ? (\n                  <span className=\"actions\">\n                    <ul>\n                      <li>\n                        {myTypeInTheChannel?.type === \"owner\" ? (\n                          <li onClick={() => handleAdminClick(normalUser.id)}>\n                            Admin\n                          </li>\n                        ) : (\n                          \"\"\n                        )}\n                      </li>\n                      <li onClick={() => handleKickClick(normalUser.id)}>\n                        kick\n                      </li>\n                      <li onClick={() => handleBlockClick(normalUser.id)}>\n                        Block\n                      </li>\n                      <li onClick={() => handleMuteClick(normalUser.id)}>\n                        Mute\n                      </li>\n                    </ul>\n                  </span>\n                ) : (\n                  \"\"\n                )}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      <div className=\"leaveBtn\">\n        <GiCancel className=\"cancelBtn\" />\n        <p>Leave {selectedChannelData?.channel_name}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ChannelInfo;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1392, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1397, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/chat/Friends/FriendInfo.tsx"],"sourcesContent":["import React from \"react\";\nimport \"./FriendInfo.css\";\nimport { currentFriend } from \"@/app/Atoms/currentFriend\";\nimport { useRecoilState } from \"recoil\";\nimport Image from \"next/image\";\nimport { MdBlock } from \"react-icons/md\";\nimport { CgUnblock } from \"react-icons/cg\";\nimport { FriendData } from \"@/app/Interfaces/friendDataInterface\";\nexport const FriendInfo = () => {\n  const [friend, setFriend] = useRecoilState(currentFriend);\n\n  return (\n    <div className=\"current_friend_info_container\">\n      <div className=\"current_friend_info\">\n        <Image\n          className=\"current_friend_avatar\"\n          src={friend?.avatar || \"\"}\n          width={5000}\n          height={5000}\n          alt=\"avatar\"\n        />\n        <h1>{friend?.name}</h1>\n        <h3>{friend?.bio}</h3>\n      </div>\n      <div className=\"current_friend_rank\">\n        <h1>rank</h1>\n        <Image\n          className=\"current_friend_rank_badge\"\n          src={friend?.rankBadge || \"\"}\n          width={5000}\n          height={5000}\n          alt=\"rank_badge\"\n        />\n        <h3> {friend?.rank} </h3>\n      </div>\n      <div className=\"current_friend_achievements_container\">\n        <h1>achievements</h1>\n        <div className=\"current_friend_achievements\">\n          {friend?.achievements?.map((a:any) => {\n            if (a?.unlocked)\n              return (\n                <div key={a?.name} className=\"current_friend_achievement\">\n                  <Image\n                    className=\"current_friend_achievement_badge\"\n                    src={a?.uri || \"\"}\n                    width={5000}\n                    height={5000}\n                    alt=\"achievement_badge\"\n                  />\n\n                  <span>{a?.name}</span>\n                </div>\n              );\n          })}\n        </div>\n      </div>\n      <div className=\"current_friend_block\">\n        <button\n          onClick={() =>\n            setFriend((prev: FriendData | undefined) => {\n              if (prev) {\n                return { ...prev, blocked: !prev?.blocked };\n              }\n            })\n          }\n          className={`block_current_friend ${\n            friend?.blocked ? \"block_current_friend\" : \"unblock_current_friend\"\n          }`}\n        >\n          {friend?.blocked ? <CgUnblock /> : <MdBlock />}\n        </button>\n        <p>{friend?.name}</p>\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAQO,MAAM,aAAa;IACxB,MAAM,CAAC,QAAQ,UAAU,GAAG;IAE5B,qBACE,mPAAC;QAAI,WAAU;;0BACb,mPAAC;gBAAI,WAAU;;kCACb;wBACE,WAAU;wBACV,KAAK,QAAQ,UAAU;wBACvB,OAAO;wBACP,QAAQ;wBACR,KAAI;;;;;;kCAEN,mPAAC;kCAAI,QAAQ;;;;;;kCACb,mPAAC;kCAAI,QAAQ;;;;;;;;;;;;0BAEf,mPAAC;gBAAI,WAAU;;kCACb,mPAAC;kCAAG;;;;;;kCACJ;wBACE,WAAU;wBACV,KAAK,QAAQ,aAAa;wBAC1B,OAAO;wBACP,QAAQ;wBACR,KAAI;;;;;;kCAEN,mPAAC;;4BAAG;4BAAE,QAAQ;4BAAK;;;;;;;;;;;;;0BAErB,mPAAC;gBAAI,WAAU;;kCACb,mPAAC;kCAAG;;;;;;kCACJ,mPAAC;wBAAI,WAAU;kCACZ,QAAQ,cAAc,IAAI,CAAC;4BAC1B,IAAI,GAAG,UACL,qBACE,mPAAC;gCAAkB,WAAU;;kDAC3B;wCACE,WAAU;wCACV,KAAK,GAAG,OAAO;wCACf,OAAO;wCACP,QAAQ;wCACR,KAAI;;;;;;kDAGN,mPAAC;kDAAM,GAAG;;;;;;;+BATF,GAAG;;;;;wBAYnB;;;;;;;;;;;;0BAGJ,mPAAC;gBAAI,WAAU;;kCACb,mPAAC;wBACC,SAAS,IACP,UAAU,CAAC;gCACT,IAAI,MAAM;oCACR,OAAO;wCAAE,GAAG,IAAI;wCAAE,SAAS,CAAC,MAAM;oCAAQ;gCAC5C;4BACF;wBAEF,WAAW,CAAC,qBAAqB,EAC/B,QAAQ,UAAU,yBAAyB,yBAC5C,CAAC;kCAED,QAAQ,wBAAU;;;;iDAAgB;;;;;;;;;;kCAErC,mPAAC;kCAAG,QAAQ;;;;;;;;;;;;;;;;;;AAIpB"}},
    {"offset": {"line": 1590, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1595, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/chat/Channels/popupCreateChannel.tsx"],"sourcesContent":["\"use client\";\nimport React, { useState } from \"react\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\nimport Image from \"next/image\";\nimport { IoCameraReverse } from \"react-icons/io5\";\nimport { MdOutlineCancel } from \"react-icons/md\";\nimport \"./channelChat.css\";\n\ntype FormFields = {\n  name: string;\n  topic: string;\n  status: string;\n  myFile: FileList | null | File;\n};\n\ninterface popupProps {\n  setShowPopUpCreateChannel: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst PopupCreateChannel: React.FC<popupProps> = ({\n  setShowPopUpCreateChannel,\n}) => {\n  const [selectedChannelPicture, setSelectedChannelPicture] = useState(\n    \"/channelDefaultImage.png\"\n  );\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isSubmitting },\n    reset,\n  } = useForm<FormFields>();\n\n  const onSubmit: SubmitHandler<FormFields> = async (data) => {\n    await new Promise((resolve) => {\n      setTimeout(resolve, 1000);\n    });\n    setShowPopUpCreateChannel(false);\n    setSelectedChannelPicture(\"/channelDefaultImage.png\");\n    console.log(data);\n    reset();\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files;\n    if (files) {\n      let file = URL.createObjectURL(files[0]);\n      console.log(\"fiel>>>>>>>\", file);\n\n      setSelectedChannelPicture(file);\n      reset({ myFile: files[0] });\n    }\n  };\n\n  return (\n    <div className=\"popupContainer\">\n      <button\n        className=\"cancelBtn\"\n        onClick={() => {\n          setShowPopUpCreateChannel(false);\n          reset();\n        }}\n      >\n        <MdOutlineCancel />\n      </button>\n      <h3>create channel</h3>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"imageContainer\">\n          <Image\n            className=\"img\"\n            src={selectedChannelPicture}\n            width={130}\n            height={130}\n            alt=\"\"\n          />\n          <div className=\"chooseImageBtn\">\n            <label htmlFor=\"file-upload\" className=\"\">\n              <IoCameraReverse />\n            </label>\n            <input\n              type=\"file\"\n              id=\"file-upload\"\n              className=\"custom-file-input\"\n              accept=\".jpg , .png , .jpeg\"\n              {...register(\"myFile\")}\n              onChange={(e) => handleChange(e)}\n            />\n          </div>\n        </div>\n        <div className=\"nameInput\">\n          <label htmlFor=\"channelName\">channel name</label>\n          <input\n            {...register(\"name\", {\n              required: \"name is required\",\n              minLength: {\n                value: 3,\n                message: \"name must have at least 3 characters\",\n              },\n              maxLength: 25,\n            })}\n            type=\"text\"\n            name=\"name\"\n            id=\"channelName\"\n            placeholder=\"name\"\n          />\n        </div>\n        <div className=\"errorMsg\">{errors.name?.message}</div>\n        <div className=\"topicInput\">\n          <label htmlFor=\"channeltopic\">channel topic</label>\n          <input\n            {...register(\"topic\", {\n              required: \"topic is required\",\n              minLength: {\n                value: 3,\n                message: \"topic must have at least 3 characters\",\n              },\n              maxLength: 50,\n            })}\n            type=\"text\"\n            name=\"topic\"\n            id=\"channeltopic\"\n            placeholder=\"topic\"\n          />\n        </div>\n        <div className=\"errorMsg\">{errors.topic?.message}</div>\n        <div className=\"channelType\">\n          <div>\n            <input\n              type=\"radio\"\n              id=\"public\"\n              value=\"public\"\n              {...register(\"status\")}\n              defaultChecked\n            />\n            <label htmlFor=\"public\">public</label>\n          </div>\n          <div>\n            <input\n              type=\"radio\"\n              id=\"private\"\n              value=\"private\"\n              {...register(\"status\")}\n            />\n            <label htmlFor=\"private\">private</label>\n          </div>\n          <div>\n            <input\n              type=\"radio\"\n              id=\"protected\"\n              value=\"protected\"\n              {...register(\"status\")}\n            />\n            <label htmlFor=\"protected\">protected</label>\n          </div>\n        </div>\n        <button\n          className=\"createChannelBtn\"\n          type=\"submit\"\n          disabled={isSubmitting}\n        >\n          {isSubmitting ? \"creating...\" : \"create\"}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default PopupCreateChannel;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1917, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1922, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/chat/Friends/AddFriend.tsx"],"sourcesContent":["\"use client\";\nimport { TiUserAdd } from \"react-icons/ti\";\n\nimport Image from \"next/image\";\nimport \"./AddFriend.css\";\nimport { useEffect } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { userToken } from \"@/app/Atoms/userToken\";\nimport { loggedUser } from \"@/app/Atoms/logged\";\nexport default function AddFriend({ user }: { user: any }) {\n  const userTok = useRecoilValue(userToken);\n  const loggedU = useRecoilValue(loggedUser);\n\n  const addFriend = async () => {\n    const dataF = {\n      user1Id: loggedU,\n      user2Id: user.uid,\n      status: \"ACCEPTED\",\n    };\n\n    try {\n      console.log(\">>>>>>>>>>>>>>>>helloooooooooo\");\n      const res = await fetch(\"http://localhost:3000/friends\", {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${userTok}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(dataF),\n      });\n\n      const data = await res.json();\n      console.log(\">>>>>>>>>>>>>>>>>>>>>\", data);\n    } catch (error: any) {\n      console.log(\"error>>>\", error.message);\n    }\n  };\n\n  return (\n    <div className=\"add_friend_conatiner\">\n      <Image\n        className=\"add_friend_avatar\"\n        src={user.avatar}\n        width={1000}\n        height={1000}\n        alt=\"avatar\"\n      />\n      <p className=\"add_friend_name\">{user.username}</p>\n      <button onClick={addFriend} className=\"add_friend_btn\">\n        <TiUserAdd />\n      </button>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;;;;;AASe,SAAS,UAAU,EAAE,IAAI,EAAiB;IACvD,MAAM,UAAU;IAChB,MAAM,UAAU;IAEhB,MAAM,YAAY;QAChB,MAAM,QAAQ;YACZ,SAAS;YACT,SAAS,KAAK,GAAG;YACjB,QAAQ;QACV;QAEA,IAAI;YACF,QAAQ,GAAG,CAAC;YACZ,MAAM,MAAM,MAAM,MAAM,iCAAiC;gBACvD,QAAQ;gBACR,SAAS;oBACP,eAAe,CAAC,OAAO,EAAE,QAAQ,CAAC;oBAClC,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,MAAM,OAAO,MAAM,IAAI,IAAI;YAC3B,QAAQ,GAAG,CAAC,yBAAyB;QACvC,EAAE,OAAO,OAAY;YACnB,QAAQ,GAAG,CAAC,YAAY,MAAM,OAAO;QACvC;IACF;IAEA,qBACE,mPAAC;QAAI,WAAU;;0BACb;gBACE,WAAU;gBACV,KAAK,KAAK,MAAM;gBAChB,OAAO;gBACP,QAAQ;gBACR,KAAI;;;;;;0BAEN,mPAAC;gBAAE,WAAU;0BAAmB,KAAK,QAAQ;;;;;;0BAC7C,mPAAC;gBAAO,SAAS;gBAAW,WAAU;0BACpC,cAAA;;;;;;;;;;;;;;;;AAIR"}},
    {"offset": {"line": 2007, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2012, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/chat/Friends/AddFriendSection.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\n\nimport { TiUserAdd } from \"react-icons/ti\";\nimport { useRecoilValue } from \"recoil\";\nimport { userToken } from \"@/app/Atoms/userToken\";\nimport AddFriend from \"./AddFriend\";\nimport { loggedUser } from \"@/app/Atoms/logged\";\n\nconst AddFriendSection = () => {\n  const userTok = useRecoilValue(userToken);\n  const userL = useRecoilValue(loggedUser);\n  const [addFriend, setAddFriend] = useState(false);\n\n  const [input, setInput] = useState(\"\");\n  const [allUsers, setAllUsers] = useState([]);\n\n  const addFriendClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n  };\n\n  const getAllusers = async () => {\n    if (!addFriend) return;\n    try {\n      console.log(\"toooooooooooooooo ====> 0000\", userTok);\n      const res = await fetch(\n        `http://localhost:3000/friends/allusers/${userL}`,\n        {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${userTok}`,\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      const data = await res.json();\n      if (data?.statusCode === 401) return;\n      console.log(\"all users ====> \", data);\n      setAllUsers(data);\n    } catch (error) {\n      console.log(\"3aaaaaaaaaaaa>>>>>\");\n    }\n  };\n  useEffect(() => {\n    getAllusers();\n  }, [addFriend]);\n\n  return (\n    <div\n      onClick={() => setAddFriend((prev) => !prev)}\n      className={`add_friend ${addFriend && `show_the_big_div`}`}\n    >\n      {addFriend ? (\n        <div onClick={addFriendClick} className=\"add_friend_container\">\n          <input type=\"text\" placeholder=\"Add friend\" />\n\n          <div className=\"searchedFriends\">\n            {allUsers?.map((user: any) => (\n              <AddFriend key={user.uid} user={user} />\n            ))}\n          </div>\n        </div>\n      ) : (\n        <TiUserAdd />\n      )}\n    </div>\n  );\n};\nexport default AddFriendSection;\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;;;;AAUA,MAAM,mBAAmB;IACvB,MAAM,UAAU;IAChB,MAAM,QAAQ;IACd,MAAM,CAAC,WAAW,aAAa,GAAG,4NAAS;IAE3C,MAAM,CAAC,OAAO,SAAS,GAAG,4NAAS;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,4NAAS,EAAE;IAE3C,MAAM,iBAAiB,CAAC;QACtB,EAAE,eAAe;IACnB;IAEA,MAAM,cAAc;QAClB,IAAI,CAAC,WAAW;QAChB,IAAI;YACF,QAAQ,GAAG,CAAC,gCAAgC;YAC5C,MAAM,MAAM,MAAM,MAChB,CAAC,uCAAuC,EAAE,MAAM,CAAC,EACjD;gBACE,QAAQ;gBACR,SAAS;oBACP,eAAe,CAAC,OAAO,EAAE,QAAQ,CAAC;oBAClC,gBAAgB;gBAClB;YACF;YAEF,MAAM,OAAO,MAAM,IAAI,IAAI;YAC3B,IAAI,MAAM,eAAe,KAAK;YAC9B,QAAQ,GAAG,CAAC,oBAAoB;YAChC,YAAY;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,GAAG,CAAC;QACd;IACF;IACA,6NAAU;QACR;IACF,GAAG;QAAC;KAAU;IAEd,qBACE,mPAAC;QACC,SAAS,IAAM,aAAa,CAAC,OAAS,CAAC;QACvC,WAAW,CAAC,WAAW,EAAE,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC;kBAEzD,0BACC,mPAAC;YAAI,SAAS;YAAgB,WAAU;;8BACtC,mPAAC;oBAAM,MAAK;oBAAO,aAAY;;;;;;8BAE/B,mPAAC;oBAAI,WAAU;8BACZ,UAAU,IAAI,CAAC,qBACd;4BAA0B,MAAM;2BAAhB,KAAK,GAAG;;;;;;;;;;;;;;;iCAK9B;;;;;;;;;;AAIR;uCACe"}},
    {"offset": {"line": 2110, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2115, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/chat/page.tsx"],"sourcesContent":["\"use client\";\nimport React, { useState } from \"react\";\nimport \"./chat.css\";\nimport Image from \"next/image\";\nimport { HiDotsVertical } from \"react-icons/hi\";\nimport FriendsChat from \"./Friends/FriendsChat\";\nimport ChannelChat from \"./Channels/channelChat\";\nimport SelectedChannelChat from \"./Channels/SelectedChannelChat\";\nimport { MdOutlineCancel } from \"react-icons/md\";\nimport FriendChatList from \"./Friends/FriendChatList\";\nimport { slctdFriend } from \"../Atoms/friendAtom\";\nimport { useRecoilState } from \"recoil\";\nimport ChannelInfo from \"./Channels/channelInfo\";\nimport { IoCameraReverse } from \"react-icons/io5\";\nimport { FriendInfo } from \"./Friends/FriendInfo\";\nimport PopupCreateChannel from \"./Channels/popupCreateChannel\";\nimport AddFriendSection from \"./Friends/AddFriendSection\";\n\nconst Chat = () => {\n  const [hide, setHide] = useState(false);\n  const [mode, setMode] = useState(\"friends\");\n  const [selectedFriend, setSelectedFriend] = useRecoilState(slctdFriend);\n  const [selectedChannel, setSelectedChannel] = useState(-1);\n  const [showPopUpCreateChannel, setShowPopUpCreateChannel] = useState(false);\n\n  const selectedBtn = mode === \"friends\" ? \"toleft\" : \"toright\";\n\n  const preventCHilde = (e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n  };\n\n  const handleParentClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    setHide(false);\n  };\n\n  return (\n    <div className=\"chat_channels_container\">\n      <div className=\"chat_channels_sub_container\">\n        <div\n          className={`createChannelPopup ${\n            showPopUpCreateChannel ? \"showPopup\" : \"hidePopUp\"\n          }`}\n        >\n          <PopupCreateChannel\n            setShowPopUpCreateChannel={setShowPopUpCreateChannel}\n          />\n        </div>\n        <div\n          className={`col1 ${\n            (selectedFriend !== -1 || selectedChannel > 0) && \"hideCol1\"\n          }  `}\n        >\n          <div className=\"switcher\">\n            <button\n              onClick={() => {\n                setMode(\"friends\");\n              }}\n            >\n              Friends\n            </button>\n            <button\n              onClick={() => {\n                setMode(\"channels\");\n              }}\n            >\n              Channels\n            </button>\n            <span className={`selectedColor ${selectedBtn}`}></span>\n          </div>\n          {/* show friends list or channels list */}\n          {mode == \"friends\" ? (\n            <div className=\"friendsList\">\n              <FriendsChat />\n            </div>\n          ) : (\n            <div className=\"channelsList\">\n              <ChannelChat\n                setSelectedChannel={setSelectedChannel}\n                setShowPopUpCreateChannel={setShowPopUpCreateChannel}\n              />\n            </div>\n          )}\n        </div>\n        <div\n          className={`col2 ${\n            (selectedFriend !== -1 || selectedChannel > 0) && \"showCol2\"\n          }  `}\n        >\n          {/* show selected friend chat or selected channel chat */}\n          {mode == \"friends\" && selectedFriend != -1 ? (\n            <div className=\"selectedFriendChat\">\n              <FriendChatList />\n            </div>\n          ) : mode == \"channels\" && selectedChannel > 0 ? (\n            <div className=\"selectedChannelChat\">\n              <SelectedChannelChat\n                selectedChannel={selectedChannel}\n                setSelectedChannel={setSelectedChannel}\n              />\n            </div>\n          ) : (\n            <div className=\"svgHolder\">\n              {/* animated svg image until u select some :) */}\n              <Image\n                className=\"svgImage\"\n                src={\"/manageChat.svg\"}\n                width={300}\n                height={300}\n                alt=\"select a chat :)\"\n              />\n              <p>all messages are end to end encrypted.</p>\n            </div>\n          )}\n        </div>\n        <div\n          onClick={handleParentClick}\n          className={`col3 ${hide && \"show_col3\"}`}\n        >\n          <div onClick={preventCHilde} className=\"clo3_sub_container\">\n            {mode == \"friends\" && selectedFriend != -1 ? (\n              <FriendInfo />\n            ) : mode == \"channels\" && selectedChannel > 0 ? (\n              <ChannelInfo selectedChannel={selectedChannel} />\n            ) : (\n              \"\"\n            )}\n          </div>\n        </div>\n\n        <div\n          onClick={() => {\n            setHide((prev) => !prev);\n          }}\n          className=\"chat_channel_details\"\n        >\n          {hide ? (\n            <MdOutlineCancel className=\"dots_hide\" />\n          ) : (\n            <HiDotsVertical className=\"dots_hide\" />\n          )}\n        </div>\n        {/* {mode === \"friends\" && ( */}\n        <AddFriendSection />\n        {/* )} */}\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;AAkBA,MAAM,OAAO;IACX,MAAM,CAAC,MAAM,QAAQ,GAAG,4NAAS;IACjC,MAAM,CAAC,MAAM,QAAQ,GAAG,4NAAS;IACjC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG;IAC5C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,4NAAS,CAAC;IACxD,MAAM,CAAC,wBAAwB,0BAA0B,GAAG,4NAAS;IAErE,MAAM,cAAc,SAAS,YAAY,WAAW;IAEpD,MAAM,gBAAgB,CAAC;QACrB,EAAE,eAAe;IACnB;IAEA,MAAM,oBAAoB,CAAC;QACzB,QAAQ;IACV;IAEA,qBACE,mPAAC;QAAI,WAAU;kBACb,cAAA,mPAAC;YAAI,WAAU;;8BACb,mPAAC;oBACC,WAAW,CAAC,mBAAmB,EAC7B,yBAAyB,cAAc,YACxC,CAAC;8BAEF,cAAA;wBACE,2BAA2B;;;;;;;;;;;8BAG/B,mPAAC;oBACC,WAAW,CAAC,KAAK,EACf,CAAC,mBAAmB,CAAC,KAAK,kBAAkB,CAAC,KAAK,WACnD,EAAE,CAAC;;sCAEJ,mPAAC;4BAAI,WAAU;;8CACb,mPAAC;oCACC,SAAS;wCACP,QAAQ;oCACV;8CACD;;;;;;8CAGD,mPAAC;oCACC,SAAS;wCACP,QAAQ;oCACV;8CACD;;;;;;8CAGD,mPAAC;oCAAK,WAAW,CAAC,cAAc,EAAE,YAAY,CAAC;;;;;;;;;;;;wBAGhD,QAAQ,0BACP,mPAAC;4BAAI,WAAU;sCACb,cAAA;;;;;;;;;iDAGF,mPAAC;4BAAI,WAAU;sCACb,cAAA;gCACE,oBAAoB;gCACpB,2BAA2B;;;;;;;;;;;;;;;;;8BAKnC,mPAAC;oBACC,WAAW,CAAC,KAAK,EACf,CAAC,mBAAmB,CAAC,KAAK,kBAAkB,CAAC,KAAK,WACnD,EAAE,CAAC;8BAGH,QAAQ,aAAa,kBAAkB,CAAC,kBACvC,mPAAC;wBAAI,WAAU;kCACb,cAAA;;;;;;;;;+BAEA,QAAQ,cAAc,kBAAkB,kBAC1C,mPAAC;wBAAI,WAAU;kCACb,cAAA;4BACE,iBAAiB;4BACjB,oBAAoB;;;;;;;;;;6CAIxB,mPAAC;wBAAI,WAAU;;0CAEb;gCACE,WAAU;gCACV,KAAK;gCACL,OAAO;gCACP,QAAQ;gCACR,KAAI;;;;;;0CAEN,mPAAC;0CAAE;;;;;;;;;;;;;;;;;8BAIT,mPAAC;oBACC,SAAS;oBACT,WAAW,CAAC,KAAK,EAAE,QAAQ,YAAY,CAAC;8BAExC,cAAA,mPAAC;wBAAI,SAAS;wBAAe,WAAU;kCACpC,QAAQ,aAAa,kBAAkB,CAAC,kBACvC;;;;mCACE,QAAQ,cAAc,kBAAkB,kBAC1C;4BAAa,iBAAiB;;;;;mCAE9B;;;;;;;;;;;8BAKN,mPAAC;oBACC,SAAS;wBACP,QAAQ,CAAC,OAAS,CAAC;oBACrB;oBACA,WAAU;8BAET,qBACC;wBAAiB,WAAU;;;;;6CAE3B;wBAAgB,WAAU;;;;;;;;;;;8BAI9B;;;;;;;;;;;;;;;;AAKR;uCAEe"}},
    {"offset": {"line": 2381, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}