{
  "version": 3,
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/Atoms/friendAtom.ts"],"sourcesContent":["import { atom } from \"recoil\";\nexport const slctdFriend = atom({\n  key: \"selectedFriend\",\n  default: Number(localStorage.getItem(\"selectedFriend\")) || -1,\n});\n"],"names":[],"mappings":";;;;;;AACO,MAAM,cAAc,8IAAK;IAC9B,KAAK;IACL,SAAS,OAAO,aAAa,OAAO,CAAC,sBAAsB,CAAC;AAC9D"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/Atoms/selectedFriendProfile.ts"],"sourcesContent":["import { atom } from \"recoil\";\n\nexport const selectedFriendProfile = atom<number>({\n  key: \"selectedFriendProfile\",\n  default: -1,\n});\n"],"names":[],"mappings":";;;;;;AAEO,MAAM,wBAAwB,8IAAa;IAChD,KAAK;IACL,SAAS,CAAC;AACZ"}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/profile/Friend.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport { LuMessagesSquare } from \"react-icons/lu\";\nimport { BiSolidJoystickAlt } from \"react-icons/bi\";\nimport { MdBlock } from \"react-icons/md\";\nimport { CgUnblock } from \"react-icons/cg\";\nimport { TbUserShare } from \"react-icons/tb\";\n\nimport silence from \"../../public/mask_avatar.png\";\n\nimport \"./Friend.css\";\nimport Image from \"next/image\";\nimport { FriendData } from \"@/app/Interfaces/friendDataInterface\";\nimport { slctdFriend } from \"../Atoms/friendAtom\";\nimport { useRecoilState } from \"recoil\";\nimport { useRouter } from \"next/navigation\";\nimport { selectedFriendProfile } from \"../Atoms/selectedFriendProfile\";\n\nexport default function Friend({ friend }: { friend: any }) {\n  const [selectedProfile, setSelectedProfile] = useRecoilState(\n    selectedFriendProfile\n  );\n  const [selectedFriend, setSelectedFriend] = useRecoilState(slctdFriend);\n  const route = useRouter();\n\n  const [logged, setLogged] = useState(\n    friend?.status === \"online\" || friend?.status === \"ingame\"\n  );\n  const [inGame, setInGame] = useState(friend?.status === \"ingame\");\n  const [blocked, setBlocked] = useState<boolean>(\n    friend?.fsStatus === \"BLOCKED\"\n  );\n  const [burgerM, setBurgerM] = useState(false);\n\n  const handleSwitch = () => {\n    setBlocked((prev) => !prev);\n  };\n  const handleBurgerM = () => {\n    setBurgerM((prev) => !prev);\n  };\n\n  const test = () => {\n    setSelectedFriend(friend?.uid);\n    route.push(\"/chat\");\n    console.log(\"-------->>>>>>>\");\n  };\n\n  return (\n    <div className=\"friend_container\">\n      <div className=\"friend_name_photo\">\n        <Image\n          src={friend?.avatar}\n          width={2000}\n          height={2000}\n          className={`friend_avatar ${blocked && \"blocked_friend_avatar\"}`}\n          alt=\"avatar\"\n        />\n\n        <label\n          htmlFor=\"friendProfile\"\n          className={`profile_name ${blocked && \"blocked_friend\"}  ${\n            burgerM && \"hideName\"\n          }`}\n        >\n          <div\n            className={`dot ${logged && \"logged\"}  ${\n              logged && inGame && \"ingame\"\n            }`}\n          ></div>\n          {friend?.name}\n        </label>\n\n        <div className={`btn_conatiner ${burgerM && \"showParam\"}`}>\n          <button\n            id=\"friendProfile\"\n            onClick={() => setSelectedProfile(friend?.uid)}\n            className=\"friend_component_btn view_profile\"\n          >\n            <TbUserShare className=\"go_to_profile\" />\n          </button>\n          <button\n            className={`friend_component_btn friend_msg ${\n              (blocked || !logged) && \"disable_btns\"\n            }`}\n            onClick={test}\n            disabled={blocked || !logged}\n          >\n            <LuMessagesSquare />\n          </button>\n          <button\n            className={`friend_component_btn friend_play ${\n              (blocked || !logged || (logged && inGame)) && \"disable_btns\"\n            }\n                    `}\n            onClick={test}\n            disabled={blocked || !logged || (logged && inGame)}\n          >\n            <BiSolidJoystickAlt />\n          </button>\n          <MdBlock\n            onClick={handleSwitch}\n            className={`friend_block  ${blocked && \"hide_block\"}`}\n          />\n          <CgUnblock\n            onClick={handleSwitch}\n            className={`friend_unblock  ${blocked && \"show_unblock\"}`}\n          />\n        </div>\n        <div onClick={handleBurgerM} className=\"profile_burger_menu\">\n          <span> </span>\n          <span> </span>\n          <span> </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;AAmBe,SAAS,OAAO,EAAE,MAAM,EAAmB;IACxD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG;IAG9C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG;IAC5C,MAAM,QAAQ;IAEd,MAAM,CAAC,QAAQ,UAAU,GAAG,4NAC1B,QAAQ,WAAW,YAAY,QAAQ,WAAW;IAEpD,MAAM,CAAC,QAAQ,UAAU,GAAG,4NAAS,QAAQ,WAAW;IACxD,MAAM,CAAC,SAAS,WAAW,GAAG,4NAC5B,QAAQ,aAAa;IAEvB,MAAM,CAAC,SAAS,WAAW,GAAG,4NAAS;IAEvC,MAAM,eAAe;QACnB,WAAW,CAAC,OAAS,CAAC;IACxB;IACA,MAAM,gBAAgB;QACpB,WAAW,CAAC,OAAS,CAAC;IACxB;IAEA,MAAM,OAAO;QACX,kBAAkB,QAAQ;QAC1B,MAAM,IAAI,CAAC;QACX,QAAQ,GAAG,CAAC;IACd;IAEA,qBACE,mPAAC;QAAI,WAAU;kBACb,cAAA,mPAAC;YAAI,WAAU;;8BACb;oBACE,KAAK,QAAQ;oBACb,OAAO;oBACP,QAAQ;oBACR,WAAW,CAAC,cAAc,EAAE,WAAW,wBAAwB,CAAC;oBAChE,KAAI;;;;;;8BAGN,mPAAC;oBACC,SAAQ;oBACR,WAAW,CAAC,aAAa,EAAE,WAAW,iBAAiB,EAAE,EACvD,WAAW,WACZ,CAAC;;sCAEF,mPAAC;4BACC,WAAW,CAAC,IAAI,EAAE,UAAU,SAAS,EAAE,EACrC,UAAU,UAAU,SACrB,CAAC;;;;;;wBAEH,QAAQ;;;;;;;8BAGX,mPAAC;oBAAI,WAAW,CAAC,cAAc,EAAE,WAAW,YAAY,CAAC;;sCACvD,mPAAC;4BACC,IAAG;4BACH,SAAS,IAAM,mBAAmB,QAAQ;4BAC1C,WAAU;sCAEV,cAAA;gCAAa,WAAU;;;;;;;;;;;sCAEzB,mPAAC;4BACC,WAAW,CAAC,gCAAgC,EAC1C,CAAC,WAAW,CAAC,MAAM,KAAK,eACzB,CAAC;4BACF,SAAS;4BACT,UAAU,WAAW,CAAC;sCAEtB,cAAA;;;;;;;;;;sCAEF,mPAAC;4BACC,WAAW,CAAC,iCAAiC,EAC3C,CAAC,WAAW,CAAC,UAAW,UAAU,MAAO,KAAK,eAC/C;oBACO,CAAC;4BACT,SAAS;4BACT,UAAU,WAAW,CAAC,UAAW,UAAU;sCAE3C,cAAA;;;;;;;;;;sCAEF;4BACE,SAAS;4BACT,WAAW,CAAC,cAAc,EAAE,WAAW,aAAa,CAAC;;;;;;sCAEvD;4BACE,SAAS;4BACT,WAAW,CAAC,gBAAgB,EAAE,WAAW,eAAe,CAAC;;;;;;;;;;;;8BAG7D,mPAAC;oBAAI,SAAS;oBAAe,WAAU;;sCACrC,mPAAC;sCAAK;;;;;;sCACN,mPAAC;sCAAK;;;;;;sCACN,mPAAC;sCAAK;;;;;;;;;;;;;;;;;;;;;;;AAKhB"}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/profile/Friends.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Friends.css\";\nimport Friend from \"./Friend\";\nimport friendData from \"../data/friends.json\";\nimport { FriendData } from \"@/app/Interfaces/friendDataInterface\";\nimport { useRecoilValue } from \"recoil\";\nimport { loggedUser } from \"../Atoms/logged\";\nimport { userToken } from \"../Atoms/userToken\";\n\nexport default function Friends({ whichProfile }: { whichProfile: any }) {\n  const loggedU = useRecoilValue(loggedUser);\n  const userTok = useRecoilValue(userToken);\n  const [userFriends, setUserFriends] = useState<any[]>([]);\n\n  useEffect(() => {\n    const getUserData = async () => {\n      try {\n        const res = await fetch(\n          `http://localhost:3000/friends/${whichProfile}`,\n          {\n            headers: {\n              Authorization: `Bearer ${userTok}`,\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        const data = await res.json();\n        setUserFriends(data);\n        console.log(\"userData-->>>\", data);\n      } catch (error: any) {\n        console.log(\"--->>>\", error.message);\n      }\n    };\n    getUserData();\n  }, [whichProfile]);\n\n  // const sortedFriends = friend_data.sort((a: FriendData, b: FriendData) => {\n  //   const onlineComparison =\n  //     (b.status === \"online\" ? 1 : 0) - (a.status === \"online\" ? 1 : 0);\n  //   const ingameComparison =\n  //     (b.status === \"ingame\" ? 1 : 0) - (a.status === \"ingame\" ? 1 : 0);\n  //   return onlineComparison || ingameComparison;\n  // });\n\n  return (\n    <div className=\"friends_container\">\n      {userFriends?.length> 0&& userFriends?.map((e: any) => (\n        <Friend friend={e} key={e.uid} />\n      ))}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AASe,SAAS,QAAQ,EAAE,YAAY,EAAyB;IACrE,MAAM,UAAU;IAChB,MAAM,UAAU;IAChB,MAAM,CAAC,aAAa,eAAe,GAAG,4NAAgB,EAAE;IAExD,6NAAU;QACR,MAAM,cAAc;YAClB,IAAI;gBACF,MAAM,MAAM,MAAM,MAChB,CAAC,8BAA8B,EAAE,aAAa,CAAC,EAC/C;oBACE,SAAS;wBACP,eAAe,CAAC,OAAO,EAAE,QAAQ,CAAC;wBAClC,gBAAgB;oBAClB;gBACF;gBAEF,MAAM,OAAO,MAAM,IAAI,IAAI;gBAC3B,eAAe;gBACf,QAAQ,GAAG,CAAC,iBAAiB;YAC/B,EAAE,OAAO,OAAY;gBACnB,QAAQ,GAAG,CAAC,UAAU,MAAM,OAAO;YACrC;QACF;QACA;IACF,GAAG;QAAC;KAAa;IAEjB,6EAA6E;IAC7E,6BAA6B;IAC7B,yEAAyE;IACzE,6BAA6B;IAC7B,yEAAyE;IACzE,iDAAiD;IACjD,MAAM;IAEN,qBACE,mPAAC;QAAI,WAAU;kBACZ,aAAa,SAAQ,KAAI,aAAa,IAAI,CAAC,kBAC1C;gBAAQ,QAAQ;eAAQ,EAAE,GAAG;;;;;;;;;;AAIrC"}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/profile/Stats.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Stats.css\";\nimport playerData from \"../data/player-info.json\";\n\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\n\nexport default function Stats() {\n  const player_data: any = playerData;\n  const [statsSwitch, setStatsSwitch] = useState({\n    state: \"win\",\n    color: \"#1ce14e\",\n  });\n  const [chartData, setChartData] = useState(() =>\n    transformPlayerData(player_data)\n  );\n\n\n  function transformPlayerData(player_data: any) {\n    const dataArray = player_data.stats.map((stat: any) => {\n      const [month, year] = stat.date.split(\"/\");\n      if (statsSwitch.state === \"win\")\n        return {\n          [statsSwitch.state]: parseInt(stat.win),\n          name: `${month}/${year.slice(-2)}`,\n        };\n      if (statsSwitch.state === \"lose\")\n        return {\n          [statsSwitch.state]: parseInt(stat.lose),\n          name: `${month}/${year.slice(-2)}`,\n        };\n      if (statsSwitch.state === \"w/l\") {\n        const wl =\n          (parseInt(stat.win) / (parseInt(stat.win) + parseInt(stat.lose))) *\n          100;\n        return {\n          [statsSwitch.state]: wl.toFixed(2),\n          name: `${month}/${year.slice(-2)}`,\n        };\n      }\n    });\n    return dataArray;\n  }\n\n  const switchStats = (e: any) => {\n    const buttonText = e.target.textContent;\n\n    if (buttonText === \"win\")\n      setStatsSwitch({ state: \"win\", color: \"#1ce14e\" });\n\n    if (buttonText === \"lose\")\n      setStatsSwitch({ state: \"lose\", color: \"#ff3355\" });\n\n    if (buttonText === \"w/l\")\n      setStatsSwitch({ state: \"w/l\", color: \"#ff7f00\" });\n  };\n\n  useEffect(() => {\n    setChartData(transformPlayerData(player_data));\n  }, [statsSwitch]);\n\n  return (\n    <div className=\"stats_container\">\n      <ResponsiveContainer className=\"chart\" width=\"100%\" height=\"90%\">\n        <AreaChart data={chartData}>\n          <XAxis\n            dataKey=\"name\"\n            axisLine={{ stroke: \"white\" }}\n            tick={{ fill: \"white\" }}\n          />\n          <YAxis\n            domain={statsSwitch.state === \"w/l\" ? [0, 100] : undefined}\n            axisLine={{ stroke: \"white\" }}\n            tick={{ fill: \"white\" }}\n          />\n          <Tooltip />\n          <defs>\n            <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop\n                offset=\"0%\"\n                stopColor={statsSwitch.color}\n                stopOpacity={0.8}\n              />\n              <stop\n                offset=\"100%\"\n                stopColor={statsSwitch.color}\n                stopOpacity={0}\n              />\n            </linearGradient>\n          </defs>\n          <Area\n            type=\"monotone\"\n            dataKey={statsSwitch.state}\n            stroke={statsSwitch.color}\n            fill=\"url(#colorUv)\"\n          />\n        </AreaChart>\n      </ResponsiveContainer>\n      <div className=\"stat_btn_switch\">\n        <button\n          className={`${statsSwitch.state === \"win\" && \"btn_win\"}`}\n          onClick={switchStats}\n        >\n          win\n        </button>\n        <button\n          className={`${statsSwitch.state === \"lose\" && \"btn_lose\"}`}\n          onClick={switchStats}\n        >\n          lose\n        </button>\n        <button\n          className={`${statsSwitch.state === \"w/l\" && \"btn_wl\"}`}\n          onClick={switchStats}\n        >\n          w/l\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 520, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 525, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/profile/Achievement.tsx"],"sourcesContent":["import React from \"react\";\nimport \"./Achievement.css\";\nimport Image from \"next/image\";\n// import paddler from \"../../public/achievement/Precision_Paddler.png\";\n\nexport default function Achievement({ achievement }) {\n  return (\n    <div className={`achievement_container ${\n      !achievement.unlocked && \"locked_achievement\"\n    }`}>\n      <Image\n        src={achievement.uri}\n        width={1000}\n        height={1000}\n        className={`friend_achievement_badge  `}\n        alt=\"achievement\"\n      />\n\n      <div className=\"achievement_name\">\n        <div className=\"achievement_desc\">\n          <h1>{achievement.name}</h1>\n          <h4 className=\"unlocked_at\">{achievement.date}</h4>\n        </div>\n        <h5>{achievement.description}</h5>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;AAKe,SAAS,YAAY,EAAE,WAAW,EAAE;IACjD,qBACE,mPAAC;QAAI,WAAW,CAAC,sBAAsB,EACrC,CAAC,YAAY,QAAQ,IAAI,qBAC1B,CAAC;;0BACA;gBACE,KAAK,YAAY,GAAG;gBACpB,OAAO;gBACP,QAAQ;gBACR,WAAW,CAAC,0BAA0B,CAAC;gBACvC,KAAI;;;;;;0BAGN,mPAAC;gBAAI,WAAU;;kCACb,mPAAC;wBAAI,WAAU;;0CACb,mPAAC;0CAAI,YAAY,IAAI;;;;;;0CACrB,mPAAC;gCAAG,WAAU;0CAAe,YAAY,IAAI;;;;;;;;;;;;kCAE/C,mPAAC;kCAAI,YAAY,WAAW;;;;;;;;;;;;;;;;;;AAIpC"}},
    {"offset": {"line": 596, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 601, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/profile/Achievements.tsx"],"sourcesContent":["import React from \"react\";\nimport Achievement from \"./Achievement\";\nimport playerData from \"../data/player-info.json\";\nimport \"./Achievements.css\";\nimport { PlayerInfo } from \"@/app/Interfaces/playerInfoInterface\";\nexport default function Achievements() {\n  const player_data: PlayerInfo = playerData;\n\n  const sortedAchievements = player_data.achievements.sort(\n    (a: any, b: any) => b.unlicked - a.unlicked\n  );\n\n  return (\n    <div className=\"achievements_container\">\n      {sortedAchievements.map((e) => (\n        <Achievement achievement={e} key={e.name} />\n      ))}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAKe,SAAS;IACtB,MAAM;IAEN,MAAM,qBAAqB,YAAY,YAAY,CAAC,IAAI,CACtD,CAAC,GAAQ,IAAW,EAAE,QAAQ,GAAG,EAAE,QAAQ;IAG7C,qBACE,mPAAC;QAAI,WAAU;kBACZ,mBAAmB,GAAG,CAAC,CAAC,kBACvB;gBAAa,aAAa;eAAQ,EAAE,IAAI;;;;;;;;;;AAIhD"}},
    {"offset": {"line": 630, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 635, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/profile/ProfileDetails.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport \"./ProfileDetails.css\";\nimport Friends from \"./Friends\";\nimport Stats from \"./Stats\";\nimport Achievements from \"./Achievements\";\n\nexport default function ProfileDetails({\n  whichProfile,\n}: {\n  whichProfile: any;\n}) {\n  const [switchElements, setSwitchElements] = useState(\"friends\");\n\n  const switchE = (e: React.MouseEvent<HTMLButtonElement>) => {\n    setSwitchElements(e.currentTarget.textContent || \"\");\n  };\n  return (\n    <div className=\"profile_details_container\">\n      <div className=\"profile_details_header\">\n        <button\n          onClick={switchE}\n          className={`${switchElements === \"stats\" && \"underline_animation\"}`}\n        >\n          stats\n        </button>\n\n        <button\n          onClick={switchE}\n          className={`${switchElements === \"friends\" && \"underline_animation\"}`}\n        >\n          friends\n        </button>\n        <button\n          onClick={switchE}\n          className={`${\n            switchElements === \"achievements\" && \"underline_animation\"\n          }`}\n        >\n          achievements\n        </button>\n      </div>\n      <div className=\"profile_details_data\">\n        {switchElements === \"stats\" && <Stats />}\n        {switchElements === \"friends\" && (<Friends whichProfile={whichProfile} />)}\n        {switchElements === \"achievements\" && <Achievements />}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;AAAA;;;;;;;AAQe,SAAS,eAAe,EACrC,YAAY,EAGb;IACC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,4NAAS;IAErD,MAAM,UAAU,CAAC;QACf,kBAAkB,EAAE,aAAa,CAAC,WAAW,IAAI;IACnD;IACA,qBACE,mPAAC;QAAI,WAAU;;0BACb,mPAAC;gBAAI,WAAU;;kCACb,mPAAC;wBACC,SAAS;wBACT,WAAW,CAAC,EAAE,mBAAmB,WAAW,sBAAsB,CAAC;kCACpE;;;;;;kCAID,mPAAC;wBACC,SAAS;wBACT,WAAW,CAAC,EAAE,mBAAmB,aAAa,sBAAsB,CAAC;kCACtE;;;;;;kCAGD,mPAAC;wBACC,SAAS;wBACT,WAAW,CAAC,EACV,mBAAmB,kBAAkB,sBACtC,CAAC;kCACH;;;;;;;;;;;;0BAIH,mPAAC;gBAAI,WAAU;;oBACZ,mBAAmB,yBAAW;;;;;oBAC9B,mBAAmB,2BAAc;wBAAS,cAAc;;;;;;oBACxD,mBAAmB,gCAAkB;;;;;;;;;;;;;;;;;AAI9C"}},
    {"offset": {"line": 728, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 733, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/profile/page.tsx"],"sourcesContent":["\"use client\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./Profile.css\";\n\nimport { MdOutlineEdit, MdContentCopy } from \"react-icons/md\";\nimport ProfileDetails from \"./ProfileDetails\";\nimport Image from \"next/image\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { loggedUser } from \"../Atoms/logged\";\nimport { userToken } from \"../Atoms/userToken\";\nimport { PiCurrencyEthFill } from \"react-icons/pi\";\nimport { selectedFriendProfile } from \"../Atoms/selectedFriendProfile\";\n\nconst Profile = () => {\n  const uidRef = useRef<HTMLDivElement>(null);\n\n  const [selectedProfile, setSelectedProfile] = useRecoilState(\n    selectedFriendProfile\n  );\n  const loggedU = useRecoilValue(loggedUser);\n  const userTok = useRecoilValue(userToken);\n\n  const [userData, setUserData] = useState<any>({});\n  // const copyUID = () => {\n  //   return;\n  //   if (uidRef.current) {\n  //     const textToCopy = uidRef.current.textContent || \"\";\n\n  //     navigator.clipboard\n  //       .writeText(textToCopy)\n  //       .then(() => {\n  //         console.log(\"Text copied to clipboard:\", textToCopy);\n  //       })\n  //       .catch((error) => {\n  //         console.error(\"Unable to copy text to clipboard\", error);\n  //       });\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   setSelectedProfile(-1);\n  // });\n  const whichProfile = selectedProfile === -1 ? loggedU : selectedProfile;\n  useEffect(() => {\n    const getUserData = async () => {\n      try {\n        const res = await fetch(`http://localhost:3000/users/${whichProfile}`, {\n          headers: {\n            Authorization: `Bearer ${userTok}`,\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        const data = await res.json();\n        setUserData(data);\n        console.log(\"userData-->>>\", data);\n      } catch (error: any) {\n        console.log(\"--->>>\", error.message);\n      }\n    };\n    getUserData();\n  }, [whichProfile]);\n\n  return (\n    <div className=\"profile_container\">\n      <div\n        style={{\n          backgroundImage: `linear-gradient(\n          77deg,\n          rgba(0, 0, 0, 1) 30%,\n          rgba(255, 255, 255, 0) 100%\n        ), url(http://localhost:3000/bn${userData?.banner})`,\n        }}\n        className=\"user_account\"\n      >\n        <div className=\"edit_label\">\n          <span>Edit</span>\n          <MdOutlineEdit />\n        </div>\n\n        <Image\n          src={`http://localhost:3000/av/${userData?.avatar}`}\n          // src={userData?.avatar}\n          width={2000}\n          height={2000}\n          alt=\"profile_avatar\"\n          className=\"profile_photo\"\n        />\n\n        <div className=\"profile_data\">\n          <h1>{userData?.username}</h1>\n          <h4 className=\"profile_username\">\n            <PiCurrencyEthFill /> {userData?.wallet}\n          </h4>\n          <h4 className=\"profile_email\">{userData?.email}</h4>\n          <h2 className=\"profile_user_lvl\">\n            LVL <span>{userData?.level}</span>\n          </h2>\n        </div>\n\n        <div className=\"profile_progress\">\n          <div className=\"progress\">\n            <div\n              style={{\n                width: `${userData?.level}%`,\n              }}\n              className=\"pseudoProgress\"\n            ></div>\n          </div>\n          <div\n            //  onClick={copyUID}\n\n            ref={uidRef}\n            className=\"profile_uid\"\n          >\n            {userData?.uid}\n            <MdContentCopy />\n          </div>\n        </div>\n      </div>\n      <div className=\"profile_details\">\n        <ProfileDetails whichProfile={whichProfile} />\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;;;;;;;;;;;;AAaA,MAAM,UAAU;IACd,MAAM,SAAS,0NAAuB;IAEtC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG;IAG9C,MAAM,UAAU;IAChB,MAAM,UAAU;IAEhB,MAAM,CAAC,UAAU,YAAY,GAAG,4NAAc,CAAC;IAC/C,0BAA0B;IAC1B,YAAY;IACZ,0BAA0B;IAC1B,2DAA2D;IAE3D,0BAA0B;IAC1B,+BAA+B;IAC/B,sBAAsB;IACtB,gEAAgE;IAChE,WAAW;IACX,4BAA4B;IAC5B,oEAAoE;IACpE,YAAY;IACZ,MAAM;IACN,KAAK;IAEL,oBAAoB;IACpB,4BAA4B;IAC5B,MAAM;IACN,MAAM,eAAe,oBAAoB,CAAC,IAAI,UAAU;IACxD,6NAAU;QACR,MAAM,cAAc;YAClB,IAAI;gBACF,MAAM,MAAM,MAAM,MAAM,CAAC,4BAA4B,EAAE,aAAa,CAAC,EAAE;oBACrE,SAAS;wBACP,eAAe,CAAC,OAAO,EAAE,QAAQ,CAAC;wBAClC,gBAAgB;oBAClB;gBACF;gBACA,MAAM,OAAO,MAAM,IAAI,IAAI;gBAC3B,YAAY;gBACZ,QAAQ,GAAG,CAAC,iBAAiB;YAC/B,EAAE,OAAO,OAAY;gBACnB,QAAQ,GAAG,CAAC,UAAU,MAAM,OAAO;YACrC;QACF;QACA;IACF,GAAG;QAAC;KAAa;IAEjB,qBACE,mPAAC;QAAI,WAAU;;0BACb,mPAAC;gBACC,OAAO;oBACL,iBAAiB,CAAC;;;;uCAIW,EAAE,UAAU,OAAO,CAAC,CAAC;gBACpD;gBACA,WAAU;;kCAEV,mPAAC;wBAAI,WAAU;;0CACb,mPAAC;0CAAK;;;;;;0CACN;;;;;;;;;;;kCAGF;wBACE,KAAK,CAAC,yBAAyB,EAAE,UAAU,OAAO,CAAC;wBACnD,yBAAyB;wBACzB,OAAO;wBACP,QAAQ;wBACR,KAAI;wBACJ,WAAU;;;;;;kCAGZ,mPAAC;wBAAI,WAAU;;0CACb,mPAAC;0CAAI,UAAU;;;;;;0CACf,mPAAC;gCAAG,WAAU;;kDACZ;;;;;oCAAqB;oCAAE,UAAU;;;;;;;0CAEnC,mPAAC;gCAAG,WAAU;0CAAiB,UAAU;;;;;;0CACzC,mPAAC;gCAAG,WAAU;;oCAAmB;kDAC3B,mPAAC;kDAAM,UAAU;;;;;;;;;;;;;;;;;;kCAIzB,mPAAC;wBAAI,WAAU;;0CACb,mPAAC;gCAAI,WAAU;0CACb,cAAA,mPAAC;oCACC,OAAO;wCACL,OAAO,CAAC,EAAE,UAAU,MAAM,CAAC,CAAC;oCAC9B;oCACA,WAAU;;;;;;;;;;;0CAGd,mPAAC;gCACC,qBAAqB;gCAErB,KAAK;gCACL,WAAU;;oCAET,UAAU;kDACX;;;;;;;;;;;;;;;;;;;;;;;0BAIN,mPAAC;gBAAI,WAAU;0BACb,cAAA;oBAAgB,cAAc;;;;;;;;;;;;;;;;;AAItC;uCAEe"}},
    {"offset": {"line": 977, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}