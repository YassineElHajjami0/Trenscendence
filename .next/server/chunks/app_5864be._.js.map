{
  "version": 3,
  "sections": [
    {"offset": {"line": 9, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/store/page.tsx"],"sourcesContent":["\"use client\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./store.css\";\nimport \"../globals.css\";\nimport Image from \"next/image\";\nimport playerData from \"../data/player-info.json\";\nimport { TbShoppingBag } from \"react-icons/tb\";\nimport { FaRegSmileBeam } from \"react-icons/fa\";\nimport { FaBagShopping } from \"react-icons/fa6\";\nimport { PlayerInfo } from \"../Interfaces/playerInfoInterface\";\nimport { userToken } from \"@/app/Atoms/userToken\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { loggedUser } from \"../Atoms/logged\";\nimport { useRouter } from \"next/router\";\n\ninterface itemsInterface {\n  description: string;\n  id: number;\n  img: string;\n  type: string;\n  name: string;\n  power: string;\n  price: number;\n  owned: boolean;\n  choosed: boolean;\n}\n\ninterface dataInterface {\n  avatar: string;\n  banner: string;\n  username: string;\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmedPassword: string;\n  bio: string;\n  twoFA: boolean;\n  wallet: number;\n}\n\nconst Store = () => {\n  //http://10.12.4.13:3001/users\n  const [loading, setLoading] = useState(true);\n  const userTok = useRecoilValue(userToken);\n  const [popUpCannotBuy, setPopUpCannotBuy] = useState(false);\n  const [choosedArticle, setChoosedArticle] = useState<itemsInterface>();\n  const [items, setItems] = useState<itemsInterface[]>();\n  const [selectedCategory, setselectedCategory] = useState(\"all\");\n  const [userData, setUserData] = useState<dataInterface>();\n  const all = playerData.avatarsAndPaddles;\n  const playerPoints = playerData.statistic.points;\n  const userId = useRecoilValue(loggedUser);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n    const fetchedData = async () => {\n      try {\n        const responseUser = await fetch(\n          `http://localhost:3000/users/${userId}`,\n          {\n            headers: {\n              Authorization: `Bearer ${userTok}`,\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        const dataofUser = await responseUser.json();\n        console.log(\"data of user : \", dataofUser);\n        setUserData(dataofUser);\n\n        const response = await fetch(\n          `http://localhost:3000/useritems?userId=${userId}`,\n          {\n            headers: {\n              Authorization: `Bearer ${userTok}`,\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        let data: itemsInterface[] = await response.json();\n        data = data.filter((e) => e.type == \"paddle\" || e.type == \"avatar\");\n        setChoosedArticle(data[0]);\n        let oldestChoosedArticle: itemsInterface | undefined = data.find(\n          (e) => e.choosed == true\n        );\n        setPrevChoosedArticle(oldestChoosedArticle);\n\n        let oldestChoosedArticle: itemsInterface | undefined = data.find(\n          (e) => e.choosed == true\n        );\n        setPrevChoosedArticle(oldestChoosedArticle?.id);\n        console.log(\"_______>>>\", data);\n        setItems(data);\n      } catch (err) {\n        console.error(\">>>\", err);\n      }\n    };\n\n    fetchedData();\n  }, []);\n\n  const handleBuyArticle = async (id: number | undefined) => {\n    if (choosedArticle?.price && playerPoints < choosedArticle?.price) {\n      setPopUpCannotBuy(!popUpCannotBuy);\n      setTimeout(() => {\n        setPopUpCannotBuy(false);\n      }, 5000);\n    } else {\n      const response = await fetch(`http://localhost:3000/useritems`, {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${userTok}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          userId: userId,\n          itemId: id,\n          choosed: false,\n        }),\n      })\n        .then(() => {\n          console.log(\">>>>>>>>>>>>>>>baaa3>>>>>>>>>>\");\n          const updatedItems = items?.map((item) => {\n            if (item.id === id) {\n              return {\n                ...item,\n                owned: true,\n              };\n            }\n            return item;\n          });\n          setItems(updatedItems);\n          const updatedchoosedArticle: any = {\n            ...choosedArticle,\n            owned: true,\n          };\n          setChoosedArticle(updatedchoosedArticle);\n        })\n        .catch((errorResponse) => {\n          throw new Error(\n            `Failed to POST data. Error: ${errorResponse.message}`\n          );\n        });\n    }\n  };\n\n  const handleChooseArticle = async (id: number) => {\n    console.log(\"choosedArticle?.name => \", prevchoosedArticle);\n    const response = await fetch(`http://localhost:3000/useritems`, {\n      method: \"PATCH\",\n      headers: {\n        Authorization: `Bearer ${userTok}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        userId: userId,\n        itemId: id,\n        choosed: true,\n        oldId: prevchoosedArticle?.id || \"undefined\",\n        oldType: prevchoosedArticle?.type || \"undefined\",\n        type: choosedArticle?.type, //++\n        avatar: choosedArticle?.img, //++\n      }),\n    })\n      .then(() => {\n        console.log(\">>>>>>>>>>>>>baaa3>>>>>>>>>>\");\n        const updatedItems = items?.map((item) => {\n          if (item.id === id || item.choosed == true) {\n            return {\n              ...item,\n              choosed: true,\n            };\n          }\n          return { ...item, choosed: false };\n        });\n        setItems(updatedItems);\n        const updatedchoosedArticle: any = {\n          ...choosedArticle,\n          choosed: true,\n        };\n        setChoosedArticle(updatedchoosedArticle);\n      })\n      .catch((errorResponse) => {\n        throw new Error(`Failed to POST data. Error: ${errorResponse.message}`);\n      });\n  };\n\n  return (\n    <>\n      {loading ? (\n        <div className=\"container\">\n          <div className=\"bat\">\n            <div className=\"handle\">\n              <div className=\"inner\"></div>\n            </div>\n            <div className=\"front\"></div>\n          </div>\n          <div className=\"ball\"></div>\n        </div>\n      ) : (\n        <div className=\"all\">\n          {popUpCannotBuy && (\n            <span className=\"popUpCannotBuy\">\n              Your wallet balance is insufficient <br />\n              to buy this article <br />\n              Try winning more matches to increase <br />\n              your wallet balance <br /> <FaRegSmileBeam className=\"smily\" />{\" \"}\n            </span>\n          )}\n          <h2>\n            Store <FaBagShopping className=\"shop-icon\" />\n          </h2>\n          <div className=\"storeContainer\">\n            <div className=\"choosedArticle\">\n              <Image\n                src={\n                  choosedArticle\n                    ? choosedArticle.type === \"avatar\"\n                      ? `http://localhost:3000/av/${choosedArticle.img}`\n                      : `http://localhost:3000/pd/${choosedArticle.img}`\n                    : \"\"\n                }\n                width={200}\n                height={200}\n                alt=\"\"\n              />\n              <p className=\"name\">{choosedArticle?.name}</p>\n              <p className=\"description\">{choosedArticle?.description}</p>\n              <div className=\"price\">\n                {choosedArticle?.owned ? (\n                  <>\n                    <p>{choosedArticle?.price} $</p>\n                    <p>\n                      {choosedArticle?.choosed ? (\n                        \"choosed\"\n                      ) : (\n                        <button\n                          onClick={() => handleChooseArticle(choosedArticle.id)}\n                        >\n                          choose\n                        </button>\n                      )}\n                    </p>\n                  </>\n                ) : (\n                  <button\n                    onClick={() => {\n                      handleBuyArticle(choosedArticle?.id);\n                    }}\n                  >\n                    Buy Now {choosedArticle?.price}$\n                  </button>\n                )}\n              </div>\n            </div>\n            <div className=\"allArticles\">\n              <div className=\"select\">\n                <div>\n                  <label htmlFor=\"articlesType\">Choose Article </label>\n                  <select\n                    title=\"\"\n                    name=\"articlesType\"\n                    id=\"articlesType\"\n                    value={selectedCategory}\n                    onChange={(e) => setselectedCategory(e.target.value)}\n                  >\n                    <option value=\"all\">all</option>\n                    <option value=\"avatars\">avatars</option>\n                    <option value=\"paddles\">paddles</option>\n                  </select>\n                </div>\n                <p className=\"player-points\"> {userData?.wallet} $</p>\n              </div>\n              <div className=\"articles\">\n                {items?.map((article) => {\n                  if (\n                    (selectedCategory == \"avatars\" ||\n                      selectedCategory == \"all\") &&\n                    article.type == \"avatar\"\n                  ) {\n                    return (\n                      <div\n                        key={article.img}\n                        onClick={() => setChoosedArticle(article)}\n                      >\n                        <Image\n                          className=\"img\"\n                          src={`http://localhost:3000/av/${article.img}`}\n                          alt=\"avatar\"\n                          width={200}\n                          height={200}\n                        />\n\n                        {article.owned ? (\n                          \"\"\n                        ) : (\n                          <span className=\"notOwnedPrice\">\n                            {article.price} $\n                          </span>\n                        )}\n                      </div>\n                    );\n                  } else if (\n                    article.type == \"paddle\" &&\n                    (selectedCategory == \"paddles\" || selectedCategory == \"all\")\n                  ) {\n                    return (\n                      <div\n                        key={article.id}\n                        onClick={() => setChoosedArticle(article)}\n                      >\n                        <Image\n                          className=\"img\"\n                          src={`http://localhost:3000/pd/${article.img}`}\n                          alt=\"paddle\"\n                          width={200}\n                          height={200}\n                        />\n                        {article.owned ? (\n                          \"\"\n                        ) : (\n                          <span className=\"notOwnedPrice\">\n                            {article.price} $\n                          </span>\n                        )}\n                      </div>\n                    );\n                  }\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Store;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 528, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}