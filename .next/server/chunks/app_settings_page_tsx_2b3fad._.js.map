{
  "version": 3,
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/settings/page.tsx"],"sourcesContent":["\"use client\";\nimport React, { useReducer } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Popup from \"./popupChooseImage/page\";\nimport Image from \"next/image\";\nimport avatar from \"../../public/avatar5.png\";\nimport { IoMdAdd } from \"react-icons/io\";\nimport { IoCameraReverse } from \"react-icons/io5\";\nimport { FaLock } from \"react-icons/fa\";\nimport \"../store/store.css\";\nimport \"./settings.css\";\nimport { userToken } from \"@/app/Atoms/userToken\";\nimport { useRecoilValue } from \"recoil\";\nimport { loggedUser } from \"../Atoms/logged\";\nimport { FaImages } from \"react-icons/fa6\";\nimport { FaArrowLeft } from \"react-icons/fa\";\n\ninterface dataInterface {\n  avatar: string;\n  banner: string;\n  username: string;\n  email: string;\n  oldPassword: string;\n  newPassword: string;\n  confirmedPassword: string;\n  bio: string;\n  twoFA: boolean;\n  wallet: number;\n}\ninterface itemsInterface {\n  description: string;\n  id: number;\n  img: string;\n  type: string;\n  name: string;\n  power: string;\n  price: string;\n  choosed: boolean;\n  owned: boolean;\n}\n\ninterface User {\n  username?: string;\n  email?: string;\n  bio?: string;\n  twoFA?: boolean;\n  oldPassword?: string;\n  newPassword?: string;\n  confirmedPassword?: string;\n}\n\n//http://localhost:3000/image.jpeg\nconst Settings = () => {\n  const [ArticlesType, setArticlesType] = useState(\"\");\n  const [showArticlesPopup, setShowArticlesPopup] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState<dataInterface>();\n  const [errors, setErrors] = useState<string>(\"\");\n  const [qrImage, setQrImage] = useState<string>(\"\");\n  const [avatarsAndPaddles, setAvatarsAndPaddles] =\n    useState<itemsInterface[]>();\n  const userTok = useRecoilValue(userToken);\n  const userId = useRecoilValue(loggedUser);\n\n  //http://localhost:3000/users/2 if no 2 the backend does not return an error\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n    const fetchedData = async () => {\n      try {\n        const avatarsAndPaddlesResponse = await fetch(\n          `http://localhost:3000/useritems?userId=${userId}`, //remove the id in the response\n          {\n            headers: {\n              Authorization: `Bearer ${userTok}`,\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n\n        const response = await fetch(`http://localhost:3000/users/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${userTok}`,\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        const avatarsAndPaddlesData = await avatarsAndPaddlesResponse.json();\n        const data = await response.json();\n        setData(data);\n        setAvatarsAndPaddles(avatarsAndPaddlesData);\n        console.log(\"data\", data);\n        console.log(\"avatarsAndPaddles\", avatarsAndPaddlesData);\n      } catch (err) {\n        console.error(\"settings error >>>>>>\", err);\n      }\n    };\n\n    fetchedData();\n  }, [showArticlesPopup]);\n\n  function changeInputValue(\n    e:\n      | React.ChangeEvent<HTMLInputElement>\n      | React.ChangeEvent<HTMLTextAreaElement>\n  ) {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case \"username\":\n        setData((data) => ({\n          ...(data as dataInterface),\n          username: value,\n        }));\n        break;\n      case \"email\":\n        setData((data) => ({\n          ...(data as dataInterface),\n          email: value,\n        }));\n        break;\n      case \"oldPassword\":\n        setData((data) => ({\n          ...(data as dataInterface),\n          oldPassword: value,\n        }));\n        break;\n      case \"newPassword\":\n        setData((data) => ({\n          ...(data as dataInterface),\n          newPassword: value,\n        }));\n        break;\n      case \"confirmedPassword\":\n        setData((data) => ({\n          ...(data as dataInterface),\n          confirmedPassword: value,\n        }));\n        break;\n      case \"bio\":\n        setData((data) => ({\n          ...(data as dataInterface),\n          bio: value,\n        }));\n        break;\n      default:\n        break;\n    }\n  }\n\n  const saveUpdatewBtn = async () => {\n    console.log(\"????\", data);\n    try {\n      setErrors(\"\");\n      if (\n        data?.newPassword == \"\" &&\n        data?.confirmedPassword == \"\" &&\n        data?.oldPassword == \"\"\n      ) {\n      } else {\n        if (\n          data?.newPassword == \"\" ||\n          data?.confirmedPassword == \"\" ||\n          data?.oldPassword == \"\"\n        ) {\n          setErrors(\"fill the 3 password fileds to change it !\");\n          return;\n        } else if (data?.newPassword !== data?.confirmedPassword) {\n          setErrors(\"you didn't confirm your password well ! \");\n          return;\n        }\n      }\n\n      const response = await fetch(`http://localhost:3000/users/${userId}`, {\n        method: \"PATCH\",\n        headers: {\n          Authorization: `Bearer ${userTok}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          avatar: data?.avatar,\n          banner: data?.banner,\n          username: data?.username,\n          email: data?.email,\n          oldPassword: data?.oldPassword,\n          newPassword: data?.newPassword,\n          confirmedPassword: data?.confirmedPassword,\n          bio: data?.bio,\n          twoFA: data?.twoFA,\n        }),\n      });\n\n      if (!response.ok) {\n        const errorResponse = await response.json();\n        setErrors((prev) => prev + \"\\n\" + errorResponse.message);\n        throw new Error(\n          `Failed to patch data. Error: ${errorResponse.message}`\n        );\n      }\n      setErrors(\"\");\n    } catch (err) {\n      console.error(\"SS ERR>>>\", err);\n    }\n  };\n\n  const saveUpdatewBtn2 = async () => {\n    try {\n      setErrors(\"\");\n      if (\n        data?.newPassword == \"\" &&\n        data?.confirmedPassword == \"\" &&\n        data?.oldPassword == \"\"\n      ) {\n      } else {\n        if (\n          data?.newPassword == \"\" ||\n          data?.confirmedPassword == \"\" ||\n          data?.oldPassword == \"\"\n        ) {\n          setErrors(\"fill the 3 password fileds to change it !\");\n          return;\n        } else if (data?.newPassword !== data?.confirmedPassword) {\n          setErrors(\"you didn't confirm your password well ! \");\n          return;\n        }\n      }\n\n      const body: Partial<User> = {\n        username: data?.username,\n        email: data?.email,\n        bio: data?.bio,\n        twoFA: data?.twoFA,\n      };\n\n      if (data?.oldPassword && data.oldPassword !== \"\") {\n        body.oldPassword = data.oldPassword;\n        body.newPassword = data.newPassword;\n        body.confirmedPassword = data.confirmedPassword;\n      }\n      console.log(body);\n      const response = await fetch(`http://localhost:3000/users/${userId}`, {\n        method: \"PATCH\",\n        headers: {\n          Authorization: `Bearer ${userTok}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ ...body }),\n      });\n\n      if (!response.ok) {\n        const errorResponse = await response.json();\n        setErrors((prev) => prev + \"\\n\" + errorResponse.message);\n        throw new Error(\n          `Failed to patch data. Error: ${errorResponse.message}`\n        );\n      }\n      setErrors(\"\");\n    } catch (err) {\n      console.error(\"SS ERR>>>\", err);\n    }\n  };\n\n  const bringQrImage = async (type: boolean | undefined) => {\n    console.log(\"email   \", data?.email);\n    if (!type) {\n      const response = await fetch(`http://localhost:3000/auth/2fa/turn-on`, {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${userTok}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          uid: userId,\n          email: data?.email,\n        }),\n      });\n      const data_ = await response.text();\n      setQrImage(data_);\n      console.log(data_);\n    } else {\n      const response = await fetch(`http://localhost:3000/users/${userId}`, {\n        method: \"PATCH\",\n        headers: {\n          Authorization: `Bearer ${userTok}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          twoFASecret: \"\",\n          twoFA: false,\n        }),\n      });\n    }\n  };\n\n  const changeImageInTheServer = async (\n    id: number,\n    img: string,\n    type: string\n  ) => {\n    try {\n      if (type == \"avatar\") {\n        setData((data) => ({\n          ...(data as dataInterface),\n          avatar: img,\n        }));\n      } else if (type == \"banner\") {\n        setData((data) => ({\n          ...(data as dataInterface),\n          banner: img,\n        }));\n      }\n      // const response = await fetch(`http://localhost:3000/useritems`, {\n      //   method: \"PATCH\",\n      //   headers: {\n      //     Authorization: `Bearer ${userTok}`,\n      //     \"Content-Type\": \"application/json\",\n      //   },\n      //   body: JSON.stringify({\n      //     userId: userId,\n      //     itemId: id,\n      //     choosed: true,\n      //   }),\n      // });\n      // if (!response.ok) {\n      //   const errorResponse = await response.json();\n      //   throw new Error(`Failed to PATCH data. Error: ${errorResponse.message}`);\n      // }\n      setLoading(true);\n      setTimeout(() => setLoading(false), 1000);\n      setShowArticlesPopup(false);\n      const response =\n        type == \"avatar\"\n          ? await fetch(`http://localhost:3000/useritems`, {\n              method: \"PATCH\",\n              headers: {\n                Authorization: `Bearer ${userTok}`,\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                itemId: id,\n                userId: userId,\n                choosed: true,\n              }),\n            })\n          : await fetch(`http://localhost:3000/users/${userId}`, {\n              method: \"PATCH\",\n              headers: {\n                Authorization: `Bearer ${userTok}`,\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify({\n                banner: img,\n              }),\n            });\n      if (!response.ok) {\n        const errorResponse = await response.json();\n        setErrors(\"Something went wrong !\");\n        throw new Error(\n          `Failed to patch data. Error: ${errorResponse.message}`\n        );\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"changed\");\n    const file = event.target.files?.[0];\n    if (file) {\n      const formData = new FormData();\n      formData.append(\"image\", file);\n\n      fetch(`http://localhost:3000/upload/${userId}?type=${ArticlesType}`, {\n        method: \"POST\",\n        body: formData,\n      })\n        .then((res) => {\n          setShowArticlesPopup(false);\n        })\n        .catch((error) => {\n          setErrors(\"something went wrong ! try again.\");\n        });\n    }\n  };\n\n  return (\n    <>\n      {loading ? (\n        <div className=\"container\">\n          <div className=\"bat\">\n            <div className=\"handle\">\n              <div className=\"inner\"></div>\n            </div>\n            <div className=\"front\"></div>\n          </div>\n          <div className=\"ball\"></div>\n        </div>\n      ) : (\n        <>\n          {showArticlesPopup ? (\n            // <Popup\n            //   Type={ArticlesType}\n            //   Articles={player_data.avatarsAndPaddles}\n            //   setShowArticlesPopup={setShowArticlesPopup}\n            //   setProfileImage={setProfileImage}\n            //   setProfileBanner={setProfileBanner}\n            // />\n            <>\n              <div className=\"choosedItemsList\">\n                {avatarsAndPaddles?.map((e) => {\n                  return e.type == ArticlesType ? (\n                    e.type == \"avatar\" && e.owned && !e.choosed ? (\n                      <div\n                        key={e.id}\n                        className=\"item\"\n                        onClick={() =>\n                          changeImageInTheServer(e.id, e.img, \"avatar\")\n                        }\n                      >\n                        <Image\n                          className=\"img\"\n                          src={`http://localhost:3000/av/${e.img}`}\n                          width={200}\n                          height={200}\n                          alt=\"IMG\"\n                        />\n                        <p>{e.name}</p>\n                      </div>\n                    ) : e.type == \"banner\" && !e.choosed ? (\n                      <div\n                        key={e.id}\n                        className=\"item\"\n                        style={{ backgroundColor: \"transparent\" }}\n                        onClick={() =>\n                          changeImageInTheServer(e.id, e.img, \"banner\")\n                        }\n                      >\n                        <Image\n                          className=\"img\"\n                          style={{\n                            borderRadius: 0,\n                            width: \"100%\",\n                            height: \"60%\",\n                          }}\n                          src={`http://localhost:3000/bn/${e.img}`}\n                          width={200}\n                          height={200}\n                          alt=\"IMG\"\n                        />\n                      </div>\n                    ) : (\n                      \"\"\n                    )\n                  ) : (\n                    \"\"\n                  );\n                })}\n              </div>\n              <div className=\"uploadAndCancel\">\n                <label htmlFor=\"file-upload\" className=\"custom-file-upload\">\n                  Upload Image <FaImages />\n                </label>\n                <input\n                  id=\"file-upload\"\n                  type=\"file\"\n                  accept=\"image/*\"\n                  onChange={handleFileUpload}\n                />\n                <button\n                  className=\"cancel\"\n                  onClick={() => {\n                    setArticlesType(\"\");\n                    setShowArticlesPopup(false);\n                  }}\n                >\n                  <FaArrowLeft /> Cancel\n                </button>\n              </div>\n            </>\n          ) : (\n            <div className=\"settings-container\">\n              <div\n                className=\"banner\"\n                style={{\n                  backgroundImage: `url('${data?.banner}')`,\n                  backgroundSize: \"cover\",\n                  backgroundPosition: \"center\",\n                }}\n              >\n                <div className=\"image-holder\">\n                  <div>\n                    <Image\n                      className=\"profile-image\"\n                      src={`${data?.avatar}`}\n                      width={192}\n                      height={192}\n                      alt=\"Profile Picture\"\n                    />\n                  </div>\n                  <button\n                    className=\"btn-change-profile\"\n                    onClick={() => {\n                      setLoading(true);\n                      setTimeout(() => setLoading(false), 1000);\n                      setArticlesType(\"avatar\");\n                      setShowArticlesPopup(true);\n                    }}\n                  >\n                    <IoCameraReverse className=\"camera\" />\n                  </button>\n                </div>\n                <div className=\"button-holder\">\n                  <button\n                    className=\"addBannerBtn\"\n                    onClick={() => {\n                      setLoading(true);\n                      setTimeout(() => setLoading(false), 1000);\n                      setArticlesType(\"banner\");\n                      setShowArticlesPopup(true);\n                    }}\n                  >\n                    <IoMdAdd className=\"plus-icon\" />\n                  </button>\n                </div>\n              </div>\n              <div className=\"inputs-and-2fa\">\n                <div className=\"inputs\">\n                  <div>\n                    <label htmlFor=\"username\">username</label>\n                    <input\n                      type=\"text\"\n                      name=\"username\"\n                      id=\"username\"\n                      placeholder=\"Username\"\n                      className=\"username\"\n                      value={data?.username}\n                      onChange={(e) => changeInputValue(e)}\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"label\">email</label>\n                    <input\n                      type=\"text\"\n                      name=\"email\"\n                      id=\"email\"\n                      placeholder=\"Email\"\n                      className=\"email\"\n                      value={data?.email}\n                      onChange={(e) => changeInputValue(e)}\n                    />\n                  </div>{\" \"}\n                  <div>\n                    <label htmlFor=\"label\">Bio</label>\n                    <textarea\n                      rows={4}\n                      placeholder=\"Bio\"\n                      className=\"username\"\n                      name=\"bio\"\n                      value={data?.bio}\n                      onChange={(e) => changeInputValue(e)}\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"label\">password</label>\n                    <input\n                      id=\"password\"\n                      type=\"password\"\n                      name=\"oldPassword\"\n                      placeholder=\"old Password\"\n                      className=\"Password\"\n                      value={data?.oldPassword}\n                      onChange={(e) => changeInputValue(e)}\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"label\">new password</label>\n                    <input\n                      id=\"newpassword\"\n                      type=\"password\"\n                      name=\"newPassword\"\n                      placeholder=\"new Password\"\n                      className=\"Password\"\n                      value={data?.newPassword}\n                      onChange={(e) => changeInputValue(e)}\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"confirmpassword\">confirm password</label>\n                    <input\n                      id=\"confirmpassword\"\n                      type=\"password\"\n                      name=\"confirmedPassword\"\n                      placeholder=\"confirm Password\"\n                      className=\"Password\"\n                      value={data?.confirmedPassword}\n                      onChange={(e) => changeInputValue(e)}\n                    />\n                  </div>\n                  <pre className=\"errorsMsg\">{errors}</pre>\n                </div>\n                <div className=\"twofa\">\n                  <h4>\n                    Set Up Two Factor Authentication <FaLock />\n                  </h4>\n                  <div>\n                    {data?.twoFA == true && (\n                      <Image\n                        src={qrImage}\n                        alt=\"Qr code\"\n                        width={200}\n                        height={200}\n                      />\n                    )}\n                    <button\n                      onClick={() => {\n                        setData((data) => ({\n                          ...(data as dataInterface),\n                          twoFA: !data?.twoFA,\n                        }));\n                        bringQrImage(data?.twoFA);\n                      }}\n                      className={data?.twoFA ? \"redbc\" : \"greenbc\"}\n                    >\n                      {data?.twoFA ? \"Disable 2FA\" : \"Enable 2FA\"}\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <button className=\"saveUpdates\" onClick={saveUpdatewBtn2}>\n                Save Updates\n              </button>\n            </div>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Settings;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 853, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}