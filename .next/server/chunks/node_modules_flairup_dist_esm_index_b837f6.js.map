{
  "version": 3,
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["../../src/utils/asArray.ts","../../src/utils/is.ts","../../src/utils/joinTruthy.ts","../../src/utils/stableHash.ts","../../src/utils/stringManipulators.ts","../../src/Rule.ts","../../src/Sheet.ts","../../src/utils/forIn.ts","../../src/cx.ts","../../src/index.ts","/turbopack/[project]/node_modules/flairup/dist/esm/index.js"],"sourcesContent":["export function asArray<T>(v: T | T[]): T[] {\n  return [].concat(v as unknown as []);\n}\n","import { ClassName } from '../types.js';\n\nexport function isPsuedoSelector(selector: string): boolean {\n  return selector.startsWith(':');\n}\n\nexport function isStyleCondition(selector: string): boolean {\n  return (\n    isString(selector) &&\n    (selector === '*' ||\n      (selector.length > 1 && ':>~.+*'.includes(selector.slice(0, 1))) ||\n      isImmediatePostcondition(selector))\n  );\n}\n\nexport function isValidProperty(\n  property: string,\n  value: unknown,\n): value is string {\n  return (\n    (isString(value) || typeof value === 'number') &&\n    !isCssVariables(property) &&\n    !isPsuedoSelector(property) &&\n    !isMediaQuery(property)\n  );\n}\n\nexport function isMediaQuery(selector: string): boolean {\n  return selector.startsWith('@media');\n}\n\nexport function isDirectClass(selector: string): boolean {\n  return selector === '.';\n}\n\nexport function isCssVariables(selector: string): boolean {\n  return selector === '--';\n}\n\nexport function isString(value: unknown): value is string {\n  return value + '' === value;\n}\n\nexport function isClassName(value: unknown): value is ClassName {\n  return isString(value) && value.length > 1 && value.startsWith('.');\n}\n\nexport function isImmediatePostcondition(\n  value: unknown,\n): value is `&${string}` {\n  return isString(value) && (value.startsWith('&') || isPsuedoSelector(value));\n}\n","export function joinTruthy(arr: unknown[], delimiter: string = ''): string {\n  return arr.filter(Boolean).join(delimiter);\n}\n","// Stable hash function.\nexport function stableHash(prefix: string, seed: string): string {\n  let hash = 0;\n  if (seed.length === 0) return hash.toString();\n  for (let i = 0; i < seed.length; i++) {\n    const char = seed.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return `${prefix ?? 'cl'}_${hash.toString(36)}`;\n}\n","// Some properties need special handling\nexport function handlePropertyValue(property: string, value: string): string {\n  if (property === 'content') {\n    return `\"${value}\"`;\n  }\n\n  return value;\n}\n\nexport function camelCaseToDash(str: string): string {\n  return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n\nexport function joinedProperty(property: string, value: string): string {\n  return `${property}:${value}`;\n}\n\nexport function toClass(str: string): string {\n  return str ? `.${str}` : '';\n}\n\nexport function appendString(base: string, line: string): string {\n  return base ? `${base}\\n${line}` : line;\n}\n","import { Sheet } from './Sheet';\nimport { asArray } from './utils/asArray';\nimport { isImmediatePostcondition, isPsuedoSelector } from './utils/is';\nimport { joinTruthy } from './utils/joinTruthy';\nimport { stableHash } from './utils/stableHash';\nimport {\n  camelCaseToDash,\n  handlePropertyValue,\n  joinedProperty,\n  toClass,\n} from './utils/stringManipulators';\n\nexport class Rule {\n  public hash: string;\n  public joined: string;\n  public key: string;\n\n  constructor(\n    private sheet: Sheet,\n    public property: string,\n    public value: string,\n    private selector: Selector,\n  ) {\n    this.property = property;\n    this.value = value;\n    this.joined = joinedProperty(property, value);\n    const joinedConditions = this.selector.preconditions.concat(\n      this.selector.postconditions,\n    );\n    this.hash = this.selector.hasConditions\n      ? (this.selector.scopeClassName as string)\n      : stableHash(this.sheet.name, this.joined);\n    this.key = joinTruthy([this.joined, joinedConditions, this.hash]);\n  }\n\n  public toString(): string {\n    let selectors = mergeSelectors(this.selector.preconditions, {\n      right: this.hash,\n    });\n\n    selectors = mergeSelectors(this.selector.postconditions, {\n      left: selectors,\n    });\n\n    return `${selectors} {${Rule.genRule(this.property, this.value)}}`;\n  }\n\n  static genRule(property: string, value: string): string {\n    const transformedProperty = camelCaseToDash(property);\n    return (\n      joinedProperty(\n        transformedProperty,\n        handlePropertyValue(property, value),\n      ) + ';'\n    );\n  }\n}\n\nexport function mergeSelectors(\n  selectors: string[],\n  { left = '', right = '' }: { left?: string; right?: string } = {},\n): string {\n  const output = selectors.reduce((selectors, current) => {\n    if (isPsuedoSelector(current)) {\n      return selectors + current;\n    }\n\n    if (isImmediatePostcondition(current)) {\n      return selectors + current.slice(1);\n    }\n\n    return joinTruthy([selectors, current], ' ');\n\n    // selector then postcondition\n  }, left);\n\n  // preconditions, then selector\n  return joinTruthy([output, toClass(right)], ' ');\n}\n\nexport class Selector {\n  public preconditions: string[] = [];\n  public scopeClassName: string | null = null;\n  public scopeName: string | null = null;\n  public postconditions: string[] = [];\n\n  constructor(\n    private sheet: Sheet,\n    scopeName: string | null = null,\n    {\n      preconditions,\n      postconditions,\n    }: {\n      preconditions?: string[] | string | undefined;\n      postconditions?: string[] | string | undefined;\n    } = {},\n  ) {\n    this.preconditions = preconditions ? asArray(preconditions) : [];\n    this.postconditions = postconditions ? asArray(postconditions) : [];\n    this.setScope(scopeName);\n  }\n\n  private setScope(scopeName: string | null): Selector {\n    if (!scopeName) {\n      return this;\n    }\n\n    if (!this.scopeClassName) {\n      this.scopeName = scopeName;\n      this.scopeClassName = stableHash(\n        this.sheet.name,\n        // adding the count guarantees uniqueness across style.create calls\n        scopeName + this.sheet.count,\n      );\n    }\n\n    return this;\n  }\n\n  get hasConditions(): boolean {\n    return this.preconditions.length > 0 || this.postconditions.length > 0;\n  }\n\n  addScope(scopeName: string): Selector {\n    return new Selector(this.sheet, scopeName, {\n      preconditions: this.preconditions,\n      postconditions: this.postconditions,\n    });\n  }\n\n  addPrecondition(precondition: string): Selector {\n    return new Selector(this.sheet, this.scopeClassName, {\n      postconditions: this.postconditions,\n      preconditions: this.preconditions.concat(precondition),\n    });\n  }\n\n  addPostcondition(postcondition: string): Selector {\n    return new Selector(this.sheet, this.scopeClassName, {\n      preconditions: this.preconditions,\n      postconditions: this.postconditions.concat(postcondition),\n    });\n  }\n\n  createRule(property: string, value: string): Rule {\n    return new Rule(this.sheet, property, value, this);\n  }\n}\n","import { Rule } from './Rule.js';\nimport { StoredStyles } from './types.js';\nimport { isString } from './utils/is.js';\nimport { appendString } from './utils/stringManipulators.js';\n\nexport class Sheet {\n  private styleTag: HTMLStyleElement | undefined;\n\n  // Hash->css\n  private storedStyles: StoredStyles = {};\n\n  // styles->hash\n  private storedClasses: Record<string, string> = {};\n  private style: string = '';\n  public count = 0;\n  public id: string;\n\n  constructor(\n    public name: string,\n    private rootNode?: HTMLElement | null,\n  ) {\n    this.id = `flairup-${name}`;\n\n    this.styleTag = this.createStyleTag();\n  }\n\n  getStyle(): string {\n    return this.style;\n  }\n\n  append(css: string): void {\n    this.style = appendString(this.style, css);\n  }\n\n  apply(): void {\n    this.count++;\n\n    if (!this.styleTag) {\n      return;\n    }\n\n    this.styleTag.innerHTML = this.style;\n  }\n\n  isApplied(): boolean {\n    return !!this.styleTag;\n  }\n\n  createStyleTag(): HTMLStyleElement | undefined {\n    // check that we're in the browser and have access to the DOM\n    if (\n      typeof document === 'undefined' ||\n      this.isApplied() ||\n      // Explicitly disallow mounting to the DOM\n      this.rootNode === null\n    ) {\n      return this.styleTag;\n    }\n\n    const styleTag = document.createElement('style');\n    styleTag.type = 'text/css';\n    styleTag.id = this.id;\n    (this.rootNode ?? document.head).appendChild(styleTag);\n    return styleTag;\n  }\n\n  addRule(rule: Rule): string {\n    const storedClass = this.storedClasses[rule.key];\n\n    if (isString(storedClass)) {\n      return storedClass;\n    }\n\n    this.storedClasses[rule.key] = rule.hash;\n    this.storedStyles[rule.hash] = [rule.property, rule.value];\n\n    this.append(rule.toString());\n    return rule.hash;\n  }\n}\n","export function forIn<O extends Record<string, unknown>>(\n  obj: O,\n  fn: (key: string, value: O[string]) => void,\n): void {\n  for (const key in obj) {\n    fn(key.trim(), obj[key]);\n  }\n}\n","import { joinTruthy } from './utils/joinTruthy';\n\nexport function cx(...args: unknown[]): string {\n  const classes = args.reduce((classes: string[], arg) => {\n    if (arg instanceof Set) {\n      classes.push(...arg);\n    } else if (typeof arg === 'string') {\n      classes.push(arg);\n    } else if (Array.isArray(arg)) {\n      classes.push(cx(...arg));\n    } else if (typeof arg === 'object') {\n      // @ts-expect-error - it is a string\n      Object.entries(arg).forEach(([key, value]) => {\n        if (value) {\n          classes.push(key);\n        }\n      });\n    }\n\n    return classes;\n  }, [] as string[]);\n\n  return joinTruthy(classes, ' ').trim();\n}\n","import { Rule, Selector, mergeSelectors } from './Rule.js';\nimport { Sheet } from './Sheet.js';\nimport {\n  CSSVariablesObject,\n  ClassSet,\n  CreateSheetInput,\n  DirectClass,\n  ScopedStyles,\n  Styles,\n  createSheetReturn,\n} from './types.js';\nimport { asArray } from './utils/asArray.js';\nimport { forIn } from './utils/forIn.js';\nimport {\n  isCssVariables,\n  isDirectClass,\n  isMediaQuery,\n  isStyleCondition,\n  isValidProperty,\n} from './utils/is.js';\n\nexport { cx } from './cx.js';\n\nexport type { CreateSheetInput, Styles };\n\nexport function createSheet(\n  name: string,\n  rootNode?: HTMLElement | null,\n): createSheetReturn {\n  const sheet = new Sheet(name, rootNode);\n\n  return {\n    create,\n    getStyle: sheet.getStyle.bind(sheet),\n    isApplied: sheet.isApplied.bind(sheet),\n  };\n\n  function create<K extends string>(styles: CreateSheetInput<K>) {\n    const scopedStyles: ScopedStyles<K> = {} as ScopedStyles<K>;\n\n    iteratePreconditions(sheet, styles, new Selector(sheet)).forEach(\n      ([scopeName, styles, selector]) => {\n        iterateStyles(sheet, styles as Styles, selector).forEach(\n          (className) => {\n            addScopedStyle(scopeName as K, className);\n          },\n        );\n      },\n    );\n\n    // Commit the styles to the sheet.\n    // Done only once per create call.\n    // This way we do not update the DOM on every style.\n    sheet.apply();\n\n    return scopedStyles;\n\n    function addScopedStyle(name: K, className: string) {\n      scopedStyles[name as keyof ScopedStyles<K>] =\n        scopedStyles[name as keyof ScopedStyles<K>] ?? new Set<string>();\n      scopedStyles[name as keyof ScopedStyles<K>].add(className);\n    }\n  }\n}\n\n// This one plucks out all of the preconditions\n// and creates selector objects from them\nfunction iteratePreconditions(\n  sheet: Sheet,\n  styles: Styles,\n  selector: Selector,\n) {\n  const output: Array<[string, Styles, Selector]> = [];\n\n  forIn(styles, (key: string, value) => {\n    if (isStyleCondition(key)) {\n      return iteratePreconditions(\n        sheet,\n        value as Styles,\n        selector.addPrecondition(key),\n      ).forEach((item) => output.push(item));\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore - this is a valid case\n    output.push([key, styles[key], selector.addScope(key)]);\n  });\n\n  return output;\n}\n\nfunction iterateStyles(\n  sheet: Sheet,\n  styles: Styles,\n  selector: Selector,\n): ClassSet {\n  const output: ClassSet = new Set<string>();\n  // eslint-disable-next-line max-statements\n  forIn(styles, (property, value) => {\n    let res: string[] | Set<string> = [];\n\n    // Postconditions\n    if (isStyleCondition(property)) {\n      res = iterateStyles(\n        sheet,\n        value as Styles,\n        selector.addPostcondition(property),\n      );\n      // Direct classes: \".\": \"className\"\n    } else if (isDirectClass(property)) {\n      res = asArray(value as DirectClass);\n    } else if (isMediaQuery(property)) {\n      res = handleMediaQuery(sheet, value as Styles, property, selector);\n\n      // \"--\": { \"--variable\": \"value\" }\n    } else if (isCssVariables(property)) {\n      res = cssVariablesBlock(sheet, value as CSSVariablesObject, selector);\n\n      // \"property\": \"value\"\n    } else if (isValidProperty(property, value)) {\n      const rule = selector.createRule(property, value);\n      sheet.addRule(rule);\n      output.add(rule.hash);\n    }\n\n    return addEachClass(res, output);\n  });\n\n  return output;\n}\n\nfunction addEachClass(list: string[] | Set<string>, to: Set<string>) {\n  list.forEach((className) => to.add(className));\n  return to;\n}\n\n// eslint-disable-next-line max-statements\nfunction cssVariablesBlock(\n  sheet: Sheet,\n  styles: CSSVariablesObject,\n  selector: Selector,\n) {\n  const classes: ClassSet = new Set<string>();\n\n  const chunkRows: string[] = [];\n  forIn(styles, (property: string, value) => {\n    if (isValidProperty(property, value)) {\n      chunkRows.push(Rule.genRule(property, value));\n      return;\n    }\n    const res = iterateStyles(sheet, value ?? {}, selector);\n    addEachClass(res, classes);\n  });\n\n  if (!selector.scopeClassName) {\n    return classes;\n  }\n\n  if (chunkRows.length) {\n    const output = chunkRows.join(' ');\n    sheet.append(\n      `${mergeSelectors(selector.preconditions, {\n        right: selector.scopeClassName,\n      })} {${output}}`,\n    );\n  }\n\n  classes.add(selector.scopeClassName);\n  return classes;\n}\n\nfunction handleMediaQuery(\n  sheet: Sheet,\n  styles: Styles,\n  mediaQuery: string,\n  selector: Selector,\n) {\n  sheet.append(mediaQuery + ' {');\n\n  // iterateStyles will internally append each rule to the sheet\n  // as needed. All we have to do is just open the block and close it after.\n  const output = iterateStyles(sheet, styles, selector);\n\n  sheet.append('}');\n\n  return output;\n}\n",null],"names":["selectors","classes","styles","name"],"mappings":"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"}},
    {"offset": {"line": 344, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}