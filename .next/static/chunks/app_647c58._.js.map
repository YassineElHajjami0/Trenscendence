{
  "version": 3,
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/Atoms/friendAtom.ts"],"sourcesContent":["import { atom } from \"recoil\";\nexport const slctdFriend = atom({\n  key: \"selectedFriend\",\n  default: -1,\n});\n"],"names":[],"mappings":";;;;;;AACO,MAAM,cAAc,iJAAK;IAC9B,KAAK;IACL,SAAS,CAAC;AACZ"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/Atoms/selectedFriendProfile.ts"],"sourcesContent":["import { atom } from \"recoil\";\n\nexport const selectedFriendProfile = atom<number>({\n  key: \"selectedFriendProfile\",\n  default: -1,\n});\n"],"names":[],"mappings":";;;;;;AAEO,MAAM,wBAAwB,iJAAa;IAChD,KAAK;IACL,SAAS,CAAC;AACZ"}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/Atoms/channelId.ts"],"sourcesContent":["import { atom } from \"recoil\";\n\nexport const channelId = atom<number>({\n  key: \"channelId\",\n  default: -1,\n});\n"],"names":[],"mappings":";;;;;;AAEO,MAAM,YAAY,iJAAa;IACpC,KAAK;IACL,SAAS,CAAC;AACZ"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/Atoms/currentFriend.ts"],"sourcesContent":["import { atom } from \"recoil\";\nimport { FriendData } from \"../Interfaces/friendDataInterface\";\nexport const currentFriend = atom<any>({\n  key: \"currentFriend\",\n  default: {} as any,\n});\n"],"names":[],"mappings":";;;;;;AAEO,MAAM,gBAAgB,iJAAU;IACrC,KAAK;IACL,SAAS,CAAC;AACZ"}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/profile/Friend.tsx"],"sourcesContent":["\"use client\";\nimport \"./Friend.css\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { LuMessagesSquare } from \"react-icons/lu\";\nimport { BiSolidJoystickAlt } from \"react-icons/bi\";\nimport { MdBlock } from \"react-icons/md\";\nimport { CgUnblock } from \"react-icons/cg\";\nimport { TbUserShare } from \"react-icons/tb\";\n\nimport Image from \"next/image\";\n\nimport { slctdFriend } from \"../Atoms/friendAtom\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { useRouter } from \"next/navigation\";\nimport { selectedFriendProfile } from \"../Atoms/selectedFriendProfile\";\nimport { loggedUser } from \"../Atoms/logged\";\nimport axios from \"axios\";\nimport { userToken } from \"../Atoms/userToken\";\nimport { channelId } from \"../Atoms/channelId\";\nimport { currentFriend } from \"../Atoms/currentFriend\";\n\nexport default function Friend({\n  friend,\n  whichProfile,\n}: {\n  friend: any;\n  whichProfile: any;\n}) {\n  console.log(\"zaaaaaaaaaaaaaaaaab\", friend);\n  const route = useRouter();\n\n  const loggedU = useRecoilValue(loggedUser);\n  const userTok = useRecoilValue(userToken);\n\n  const [selectedProfile, setSelectedProfile] = useRecoilState(\n    selectedFriendProfile\n  );\n  const [selectedFriend, setSelectedFriend] = useRecoilState(slctdFriend);\n  const [dmID, setChannelID] = useRecoilState(channelId);\n  const [currFriend, setCurrFriend] = useRecoilState(currentFriend);\n\n  const [burgerM, setBurgerM] = useState(false);\n\n  const UID =\n    whichProfile === -1 || whichProfile === loggedU ? loggedU : whichProfile;\n  const myFriend = friend.roles.find((role: any) => role.uid !== UID);\n\n  const logged = myFriend.status === \"online\";\n  const inGame = myFriend.status === \"ingame\";\n  const blocked = myFriend.blocked;\n\n  const handleSwitch = (e: any) => {\n    e.preventDefault();\n\n    const body = {\n      channelID: friend.id,\n      friendId: myFriend.uid,\n      blocked: !blocked,\n    };\n    try {\n      axios.patch(\"http://localhost:3000/channels/dm\", body, {\n        headers: {\n          Authorization: `Bearer ${userTok}`,\n        },\n      });\n    } catch (error) {\n      console.log(\"3a\", error);\n    }\n  };\n\n  const handleBurgerM = () => {\n    setBurgerM((prev) => !prev);\n  };\n\n  const test = () => {\n    setSelectedFriend(myFriend?.uid);\n    setCurrFriend(myFriend);\n    setChannelID(friend.id);\n    route.push(\"/chat\");\n    console.log(\"-------->>>>>>>\");\n  };\n\n  return (\n    <div className=\"friend_container\">\n      <div className=\"friend_name_photo\">\n        <Image\n          src={`http://localhost:3000/${myFriend?.avatar}`}\n          width={2000}\n          height={2000}\n          className={`friend_avatar ${blocked && \"blocked_friend_avatar\"}`}\n          alt=\"avatar\"\n        />\n\n        <label\n          htmlFor={myFriend?.uid}\n          className={`profile_name ${blocked && \"blocked_friend\"}  ${\n            burgerM && \"hideName\"\n          }`}\n        >\n          <div\n            className={`dot ${logged && \"logged\"}  ${inGame && \"ingame\"}`}\n          ></div>\n          {myFriend?.username}\n        </label>\n\n        <div className={`btn_conatiner ${burgerM && \"showParam\"}`}>\n          <button\n            id={myFriend?.uid}\n            onClick={() => {\n              setSelectedProfile(myFriend?.uid);\n              route.push(`/profile/${myFriend?.username}`);\n            }}\n            className=\"friend_component_btn view_profile\"\n          >\n            <TbUserShare className=\"go_to_profile\" />\n          </button>\n          {(whichProfile === -1 || whichProfile === loggedU) && (\n            <>\n              <button\n                className={`friend_component_btn friend_msg ${\n                  (blocked || !logged) && \"disable_btns\"\n                }`}\n                onClick={test}\n                disabled={blocked || !logged}\n              >\n                <LuMessagesSquare />\n              </button>\n              <button\n                className={`friend_component_btn friend_play ${\n                  (blocked || !logged || inGame) && \"disable_btns\"\n                }`}\n                onClick={test}\n                disabled={blocked || !logged || inGame}\n              >\n                <BiSolidJoystickAlt />\n              </button>\n              <MdBlock\n                onClick={handleSwitch}\n                className={`friend_block  ${blocked && \"hide_block\"}`}\n              />\n              <CgUnblock\n                onClick={handleSwitch}\n                className={`friend_unblock  ${blocked && \"show_unblock\"}`}\n              />\n            </>\n          )}\n        </div>\n        <div onClick={handleBurgerM} className=\"profile_burger_menu\">\n          <span> </span>\n          <span> </span>\n          <span> </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 316, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/chat/Friends/AddFriend.tsx"],"sourcesContent":["\"use client\";\nimport { TiUserAdd } from \"react-icons/ti\";\n\nimport Image from \"next/image\";\nimport \"./AddFriend.css\";\nimport { useEffect } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { userToken } from \"@/app/Atoms/userToken\";\nimport { loggedUser } from \"@/app/Atoms/logged\";\nexport default function AddFriend({ user }: { user: any }) {\n  console.log(\"ooooooo>>>>>>\", user);\n\n  const userTok = useRecoilValue(userToken);\n  const loggedU = useRecoilValue(loggedUser);\n\n  const addFriend = async () => {\n    const notifData = {\n      type: \"friendReq\",\n      content: \"sent you a friend request\",\n      suserId: loggedU,\n      ruserId: user.uid,\n    };\n\n    try {\n      const res = await fetch(\"http://localhost:3000/notifications\", {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${userTok}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(notifData),\n      });\n    } catch (error: any) {\n      console.log(\"error>>>\", error);\n    }\n  };\n\n  return (\n    <div className=\"add_friend_conatiner\">\n      <Image\n        className=\"add_friend_avatar\"\n        src={`http://localhost:3000/${user.avatar}`}\n        width={1000}\n        height={1000}\n        alt=\"avatar\"\n      />\n      <p className=\"add_friend_name\">{user.username}</p>\n      <button onClick={addFriend} className=\"add_friend_btn\">\n        <TiUserAdd />\n      </button>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;;;;;;AASe,SAAS,UAAU,EAAE,IAAI,EAAiB;;IACvD,QAAQ,GAAG,CAAC,iBAAiB;IAE7B,MAAM,UAAU;IAChB,MAAM,UAAU;IAEhB,MAAM,YAAY;QAChB,MAAM,YAAY;YAChB,MAAM;YACN,SAAS;YACT,SAAS;YACT,SAAS,KAAK,GAAG;QACnB;QAEA,IAAI;YACF,MAAM,MAAM,MAAM,MAAM,uCAAuC;gBAC7D,QAAQ;gBACR,SAAS;oBACP,eAAe,CAAC,OAAO,EAAE,QAAQ,CAAC;oBAClC,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;YACvB;QACF,EAAE,OAAO,OAAY;YACnB,QAAQ,GAAG,CAAC,YAAY;QAC1B;IACF;IAEA,qBACE,wLAAC;QAAI,WAAU;;0BACb;gBACE,WAAU;gBACV,KAAK,CAAC,sBAAsB,EAAE,KAAK,MAAM,CAAC,CAAC;gBAC3C,OAAO;gBACP,QAAQ;gBACR,KAAI;;;;;;0BAEN,wLAAC;gBAAE,WAAU;0BAAmB,KAAK,QAAQ;;;;;;0BAC7C,wLAAC;gBAAO,SAAS;gBAAW,WAAU;0BACpC,cAAA;;;;;;;;;;;;;;;;AAIR;GA3CwB;;;;;;KAAA"}},
    {"offset": {"line": 416, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 421, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/chat/Friends/AddFriendSection.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\n\nimport { TiUserAdd } from \"react-icons/ti\";\nimport { useRecoilValue } from \"recoil\";\nimport { userToken } from \"@/app/Atoms/userToken\";\nimport AddFriend from \"./AddFriend\";\nimport { loggedUser } from \"@/app/Atoms/logged\";\n\ninterface AddFriendInterface {\n  className: string;\n}\nimport { usePathname } from \"next/navigation\";\nconst AddFriendSection = () => {\n  const pathname = usePathname();\n\n  // /profile\n\n  const userTok = useRecoilValue(userToken);\n  const userL = useRecoilValue(loggedUser);\n  const [addFriend, setAddFriend] = useState(false);\n\n  const [input, setInput] = useState(\"\");\n  const [allUsers, setAllUsers] = useState([]);\n  const filteredUsers = allUsers.filter((user: any) =>\n    user?.username.toLowerCase().includes(input.toLowerCase())\n  );\n  const addFriendClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n  };\n\n  const getAllusers = async () => {\n    if (!addFriend) return;\n    try {\n      const res = await fetch(\n        `http://localhost:3000/friends/allusers/${userL}`,\n        {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${userTok}`,\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      const data = await res.json();\n      if (data?.statusCode === 401) return;\n      console.log(\"all users ====> \", data);\n      setAllUsers(data);\n    } catch (error) {\n      console.log(\"3aaaaaaaaaaaa>>>>>\");\n    }\n  };\n  useEffect(() => {\n    getAllusers();\n  }, [addFriend]);\n\n  return (\n    <div\n      onClick={() => setAddFriend((prev) => !prev)}\n      className={`add_friend ${addFriend && `show_the_big_div`} `}\n    >\n      {addFriend ? (\n        <div\n          onClick={addFriendClick}\n          className={`add_friend_container ${\n            pathname === \"/profile\" && \"big_one\"\n          }`}\n        >\n          <input\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            type=\"text\"\n            placeholder=\"Add friend\"\n          />\n\n          <div className=\"searchedFriends\">\n            {filteredUsers?.map((user: any) => (\n              <AddFriend key={user.uid} user={user} />\n            ))}\n          </div>\n        </div>\n      ) : (\n        <TiUserAdd />\n      )}\n    </div>\n  );\n};\nexport default AddFriendSection;\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;;;;;;;;AAcA,MAAM,mBAAmB;;IACvB,MAAM,WAAW;IAEjB,WAAW;IAEX,MAAM,UAAU;IAChB,MAAM,QAAQ;IACd,MAAM,CAAC,WAAW,aAAa,GAAG,0KAAS;IAE3C,MAAM,CAAC,OAAO,SAAS,GAAG,0KAAS;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,0KAAS,EAAE;IAC3C,MAAM,gBAAgB,SAAS,MAAM,CAAC,CAAC,OACrC,MAAM,SAAS,cAAc,SAAS,MAAM,WAAW;IAEzD,MAAM,iBAAiB,CAAC;QACtB,EAAE,eAAe;IACnB;IAEA,MAAM,cAAc;QAClB,IAAI,CAAC,WAAW;QAChB,IAAI;YACF,MAAM,MAAM,MAAM,MAChB,CAAC,uCAAuC,EAAE,MAAM,CAAC,EACjD;gBACE,QAAQ;gBACR,SAAS;oBACP,eAAe,CAAC,OAAO,EAAE,QAAQ,CAAC;oBAClC,gBAAgB;gBAClB;YACF;YAEF,MAAM,OAAO,MAAM,IAAI,IAAI;YAC3B,IAAI,MAAM,eAAe,KAAK;YAC9B,QAAQ,GAAG,CAAC,oBAAoB;YAChC,YAAY;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,GAAG,CAAC;QACd;IACF;IACA,2KAAU;QACR;IACF,GAAG;QAAC;KAAU;IAEd,qBACE,wLAAC;QACC,SAAS,IAAM,aAAa,CAAC,OAAS,CAAC;QACvC,WAAW,CAAC,WAAW,EAAE,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;kBAE1D,0BACC,wLAAC;YACC,SAAS;YACT,WAAW,CAAC,qBAAqB,EAC/B,aAAa,cAAc,UAC5B,CAAC;;8BAEF,wLAAC;oBACC,OAAO;oBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;oBACxC,MAAK;oBACL,aAAY;;;;;;8BAGd,wLAAC;oBAAI,WAAU;8BACZ,eAAe,IAAI,CAAC,qBACnB;4BAA0B,MAAM;2BAAhB,KAAK,GAAG;;;;;;;;;;;;;;;iCAK9B;;;;;;;;;;AAIR;GAzEM;;;;;;;KAAA;uCA0ES"}},
    {"offset": {"line": 537, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 542, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/profile/Friends.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Friends.css\";\nimport Friend from \"./Friend\";\nimport friendData from \"../data/friends.json\";\nimport { FriendData } from \"@/app/Interfaces/friendDataInterface\";\nimport { useRecoilValue } from \"recoil\";\nimport { loggedUser } from \"../Atoms/logged\";\nimport { userToken } from \"../Atoms/userToken\";\nimport AddFriendSection from \"../chat/Friends/AddFriendSection\";\nimport \"../chat/chat.css\";\nimport \"../chat/Friends/AddFriend.css\";\nimport { socket } from \"../sockets/socket\";\n\nexport default function Friends({ whichProfile }: { whichProfile: any }) {\n  const UID = useRecoilValue(loggedUser);\n\n  const userTok = useRecoilValue(userToken);\n  const [userFriends, setUserFriends] = useState<any[]>([]);\n  console.log(\"friend array>>>\", userFriends);\n\n  useEffect(() => {\n    const handleBlockedFriend = (friend: any) => {\n      setUserFriends((prev: any) => {\n        return prev.map((channel: any) => {\n          if (channel.id === friend.channelID) {\n            const updatedRoles = channel.roles.map((role: any) => {\n              if (role.uid === friend.userID) {\n                return { ...role, blocked: friend.blocked };\n              }\n              return role;\n            });\n            return { ...channel, roles: updatedRoles };\n          }\n          return channel;\n        });\n      });\n    };\n\n    socket.on(\"update_blocked_friend\", handleBlockedFriend);\n    return () => {\n      socket.off(\"update_blocked_friend\");\n    };\n  });\n\n  useEffect(() => {\n    const updateFriends = (friend: any) => {\n      if (friend.length === 0) return;\n\n      const whichUID = friend.roles.some((user: any) => user.uid === UID);\n      if (whichUID) {\n        setUserFriends((prev: any) => [...prev, friend]);\n      }\n    };\n\n    socket.on(\"update_friend_list\", updateFriends);\n    return () => {\n      socket.off(\"update_friend_list\");\n    };\n  }, []);\n\n  useEffect(() => {\n    const getUserData = async () => {\n      try {\n        const res = await fetch(\n          `http://localhost:3000/channels/dm/${whichProfile}`,\n          {\n            headers: {\n              Authorization: `Bearer ${userTok}`,\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        const data = await res.json();\n        setUserFriends(data);\n        // console.log(\"userData-->>>\", data);\n      } catch (error: any) {\n        console.log(\"--->>>\", error.message);\n      }\n    };\n    getUserData();\n  }, [whichProfile]);\n\n  return (\n    <div className=\"friends_container\">\n      {userFriends?.length > 0 &&\n        userFriends?.map((e: any) => (\n          <Friend whichProfile={whichProfile} friend={e} key={e.id} />\n        ))}\n      <AddFriendSection />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAae,SAAS,QAAQ,EAAE,YAAY,EAAyB;;IACrE,MAAM,MAAM;IAEZ,MAAM,UAAU;IAChB,MAAM,CAAC,aAAa,eAAe,GAAG,0KAAgB,EAAE;IACxD,QAAQ,GAAG,CAAC,mBAAmB;IAE/B,2KAAU;QACR,MAAM,sBAAsB,CAAC;YAC3B,eAAe,CAAC;gBACd,OAAO,KAAK,GAAG,CAAC,CAAC;oBACf,IAAI,QAAQ,EAAE,KAAK,OAAO,SAAS,EAAE;wBACnC,MAAM,eAAe,QAAQ,KAAK,CAAC,GAAG,CAAC,CAAC;4BACtC,IAAI,KAAK,GAAG,KAAK,OAAO,MAAM,EAAE;gCAC9B,OAAO;oCAAE,GAAG,IAAI;oCAAE,SAAS,OAAO,OAAO;gCAAC;4BAC5C;4BACA,OAAO;wBACT;wBACA,OAAO;4BAAE,GAAG,OAAO;4BAAE,OAAO;wBAAa;oBAC3C;oBACA,OAAO;gBACT;YACF;QACF;QAEA,uIAAO,EAAE,CAAC,yBAAyB;QACnC,OAAO;YACL,uIAAO,GAAG,CAAC;QACb;IACF;IAEA,2KAAU;QACR,MAAM,gBAAgB,CAAC;YACrB,IAAI,OAAO,MAAM,KAAK,GAAG;YAEzB,MAAM,WAAW,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,OAAc,KAAK,GAAG,KAAK;YAC/D,IAAI,UAAU;gBACZ,eAAe,CAAC,OAAc;2BAAI;wBAAM;qBAAO;YACjD;QACF;QAEA,uIAAO,EAAE,CAAC,sBAAsB;QAChC,OAAO;YACL,uIAAO,GAAG,CAAC;QACb;IACF,GAAG,EAAE;IAEL,2KAAU;QACR,MAAM,cAAc;YAClB,IAAI;gBACF,MAAM,MAAM,MAAM,MAChB,CAAC,kCAAkC,EAAE,aAAa,CAAC,EACnD;oBACE,SAAS;wBACP,eAAe,CAAC,OAAO,EAAE,QAAQ,CAAC;wBAClC,gBAAgB;oBAClB;gBACF;gBAEF,MAAM,OAAO,MAAM,IAAI,IAAI;gBAC3B,eAAe;YACf,sCAAsC;YACxC,EAAE,OAAO,OAAY;gBACnB,QAAQ,GAAG,CAAC,UAAU,MAAM,OAAO;YACrC;QACF;QACA;IACF,GAAG;QAAC;KAAa;IAEjB,qBACE,wLAAC;QAAI,WAAU;;YACZ,aAAa,SAAS,KACrB,aAAa,IAAI,CAAC,kBAChB;oBAAQ,cAAc;oBAAc,QAAQ;mBAAQ,EAAE,EAAE;;;;;0BAE5D;;;;;;;;;;;AAGN;GA9EwB;;;;;;KAAA"}},
    {"offset": {"line": 668, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 677, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/profile/Stats.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Stats.css\";\nimport playerData from \"../data/player-info.json\";\n\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { BsTransparency } from \"react-icons/bs\";\n\nexport default function Stats() {\n  const player_data: any = playerData;\n  const [statsSwitch, setStatsSwitch] = useState({\n    state: \"win\",\n    color: \"#1ce14e\",\n  });\n  const [chartData, setChartData] = useState(() =>\n    transformPlayerData(player_data)\n  );\n\n  function transformPlayerData(player_data: any) {\n    const dataArray = player_data.stats.map((stat: any) => {\n      const [month, year] = stat.date.split(\"/\");\n      if (statsSwitch.state === \"win\")\n        return {\n          [statsSwitch.state]: parseInt(stat.win),\n          name: `${month}/${year.slice(-2)}`,\n        };\n      if (statsSwitch.state === \"lose\")\n        return {\n          [statsSwitch.state]: parseInt(stat.lose),\n          name: `${month}/${year.slice(-2)}`,\n        };\n      if (statsSwitch.state === \"w/l\") {\n        const wl =\n          (parseInt(stat.win) / (parseInt(stat.win) + parseInt(stat.lose))) *\n          100;\n        return {\n          [statsSwitch.state]: wl.toFixed(2),\n          name: `${month}/${year.slice(-2)}`,\n        };\n      }\n    });\n    return dataArray;\n  }\n\n  const switchStats = (e: any) => {\n    const buttonText = e.target.textContent;\n\n    if (buttonText === \"win\")\n      setStatsSwitch({ state: \"win\", color: \"#1ce14e\" });\n\n    if (buttonText === \"lose\")\n      setStatsSwitch({ state: \"lose\", color: \"#ff3355\" });\n\n    if (buttonText === \"w/l\")\n      setStatsSwitch({ state: \"w/l\", color: \"#ff7f00\" });\n  };\n\n  useEffect(() => {\n    setChartData(transformPlayerData(player_data));\n  }, [statsSwitch]);\n\n  const axisLineProps = { stroke: \"white\", opacity: \"0.6\" };\n  const tickProps = { fill: \"white\", opacity: \"0.6\" };\n\n  return (\n    <div className=\"stats_container\">\n      <ResponsiveContainer className=\"chart\" width=\"100%\" height=\"90%\">\n        <AreaChart data={chartData}>\n          <XAxis\n            dataKey=\"name\"\n            axisLine={{ stroke: \"white\", opacity: \"0.6\" }}\n            tick={{ fill: \"white\", opacity: \"0.6\" }}\n          />\n          <YAxis\n            domain={statsSwitch.state === \"w/l\" ? [0, 100] : undefined}\n            axisLine={{ stroke: \"white\", opacity: \"0\" }}\n            tick={{ fill: \"white\", opacity: \"0\" }}\n          />\n          <Tooltip />\n          <defs>\n            <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop\n                offset=\"0%\"\n                stopColor={statsSwitch.color}\n                stopOpacity={0.8}\n              />\n              <stop\n                offset=\"100%\"\n                stopColor={statsSwitch.color}\n                stopOpacity={0}\n              />\n            </linearGradient>\n          </defs>\n          <Area\n            type=\"monotone\"\n            dataKey={statsSwitch.state}\n            stroke={statsSwitch.color}\n            fill=\"url(#colorUv)\"\n          />\n        </AreaChart>\n      </ResponsiveContainer>\n      <div className=\"stat_btn_switch\">\n        <button\n          className={`${statsSwitch.state === \"win\" && \"btn_win\"}`}\n          onClick={switchStats}\n        >\n          win\n        </button>\n        <button\n          className={`${statsSwitch.state === \"lose\" && \"btn_lose\"}`}\n          onClick={switchStats}\n        >\n          lose\n        </button>\n        <button\n          className={`${statsSwitch.state === \"w/l\" && \"btn_wl\"}`}\n          onClick={switchStats}\n        >\n          w/l\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 907, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 912, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/profile/Achievement.tsx"],"sourcesContent":["import React from \"react\";\nimport \"./Achievement.css\";\nimport Image from \"next/image\";\n// import paddler from \"../../public/achievement/Precision_Paddler.png\";\n\nexport default function Achievement({ achievement }: { achievement: any }) {\n  const date = () => {\n    const options = { year: \"numeric\", month: \"2-digit\", day: \"2-digit\" };\n    if (achievement.createdAT === null) return null;\n    const date = new Date(achievement.createdAT).toLocaleString(\n      \"en-US\",\n      options as Intl.DateTimeFormatOptions\n    );\n    return date;\n  };\n  return (\n    <div\n      className={`achievement_container ${\n        !achievement.unlocked && \"locked_achievement\"\n      }`}\n    >\n      <Image\n        src={`http://localhost:3000/${achievement.uri}`}\n        width={1000}\n        height={1000}\n        className={`friend_achievement_badge  `}\n        alt=\"achievement\"\n      />\n\n      <div className=\"achievement_name\">\n        <div className=\"achievement_desc\">\n          <h1>{achievement.name}</h1>\n          <h4 className=\"unlocked_at\">{date()}</h4>\n        </div>\n        <h5>{achievement.description}</h5>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;AAKe,SAAS,YAAY,EAAE,WAAW,EAAwB;IACvE,MAAM,OAAO;QACX,MAAM,UAAU;YAAE,MAAM;YAAW,OAAO;YAAW,KAAK;QAAU;QACpE,IAAI,YAAY,SAAS,KAAK,MAAM,OAAO;QAC3C,MAAM,OAAO,IAAI,KAAK,YAAY,SAAS,EAAE,cAAc,CACzD,SACA;QAEF,OAAO;IACT;IACA,qBACE,wLAAC;QACC,WAAW,CAAC,sBAAsB,EAChC,CAAC,YAAY,QAAQ,IAAI,qBAC1B,CAAC;;0BAEF;gBACE,KAAK,CAAC,sBAAsB,EAAE,YAAY,GAAG,CAAC,CAAC;gBAC/C,OAAO;gBACP,QAAQ;gBACR,WAAW,CAAC,0BAA0B,CAAC;gBACvC,KAAI;;;;;;0BAGN,wLAAC;gBAAI,WAAU;;kCACb,wLAAC;wBAAI,WAAU;;0CACb,wLAAC;0CAAI,YAAY,IAAI;;;;;;0CACrB,wLAAC;gCAAG,WAAU;0CAAe;;;;;;;;;;;;kCAE/B,wLAAC;kCAAI,YAAY,WAAW;;;;;;;;;;;;;;;;;;AAIpC;KAjCwB"}},
    {"offset": {"line": 996, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1001, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/profile/Achievements.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Achievement from \"./Achievement\";\nimport playerData from \"../data/player-info.json\";\nimport \"./Achievements.css\";\nimport { PlayerInfo } from \"@/app/Interfaces/playerInfoInterface\";\nimport { useRecoilValue } from \"recoil\";\nimport { userToken } from \"../Atoms/userToken\";\nexport default function Achievements({ whichProfile }: { whichProfile: any }) {\n  const player_data: PlayerInfo = playerData;\n\n  const sortedAchievements = player_data.achievements.sort(\n    (a: any, b: any) => b.unlicked - a.unlicked\n  );\n  const userTok = useRecoilValue(userToken);\n\n  const [userAchievement, setUserAchievement] = useState<any[]>([]);\n\n  useEffect(() => {\n    const getUserData = async () => {\n      try {\n        const res = await fetch(\n          `http://localhost:3000/user-achievement/${whichProfile}`,\n          {\n            headers: {\n              Authorization: `Bearer ${userTok}`,\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        const data = await res.json();\n        setUserAchievement(data);\n        // console.log(\"userData-->>>\", data);\n      } catch (error: any) {\n        console.log(\"--->>>\", error.message);\n      }\n    };\n    getUserData();\n  }, [whichProfile]);\n  return (\n    <div className=\"achievements_container\">\n      {userAchievement.map((e, i) => (\n        <Achievement achievement={e} key={e.name} />\n      ))}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAOe,SAAS,aAAa,EAAE,YAAY,EAAyB;;IAC1E,MAAM;IAEN,MAAM,qBAAqB,YAAY,YAAY,CAAC,IAAI,CACtD,CAAC,GAAQ,IAAW,EAAE,QAAQ,GAAG,EAAE,QAAQ;IAE7C,MAAM,UAAU;IAEhB,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,0KAAgB,EAAE;IAEhE,2KAAU;QACR,MAAM,cAAc;YAClB,IAAI;gBACF,MAAM,MAAM,MAAM,MAChB,CAAC,uCAAuC,EAAE,aAAa,CAAC,EACxD;oBACE,SAAS;wBACP,eAAe,CAAC,OAAO,EAAE,QAAQ,CAAC;wBAClC,gBAAgB;oBAClB;gBACF;gBAEF,MAAM,OAAO,MAAM,IAAI,IAAI;gBAC3B,mBAAmB;YACnB,sCAAsC;YACxC,EAAE,OAAO,OAAY;gBACnB,QAAQ,GAAG,CAAC,UAAU,MAAM,OAAO;YACrC;QACF;QACA;IACF,GAAG;QAAC;KAAa;IACjB,qBACE,wLAAC;QAAI,WAAU;kBACZ,gBAAgB,GAAG,CAAC,CAAC,GAAG,kBACvB;gBAAa,aAAa;eAAQ,EAAE,IAAI;;;;;;;;;;AAIhD;GAtCwB;;;;;KAAA"}},
    {"offset": {"line": 1068, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1073, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/profile/ProfileDetails.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./ProfileDetails.css\";\nimport Friends from \"./Friends\";\nimport Stats from \"./Stats\";\nimport Achievements from \"./Achievements\";\n\nexport default function ProfileDetails({\n  whichProfile,\n}: {\n  whichProfile: any;\n}) {\n  const [switchElements, setSwitchElements] = useState(\"achievements\");\n\n  useEffect(() => {\n    setSwitchElements(\"achievements\");\n  }, [whichProfile]);\n\n  const switchE = (e: React.MouseEvent<HTMLButtonElement>) => {\n    setSwitchElements(e.currentTarget.textContent || \"\");\n  };\n  return (\n    <div className=\"profile_details_container\">\n      <div className=\"profile_details_header\">\n        <button\n          onClick={switchE}\n          className={`${switchElements === \"stats\" && \"underline_animation\"}`}\n        >\n          stats\n        </button>\n\n        <button\n          onClick={switchE}\n          className={`${switchElements === \"friends\" && \"underline_animation\"}`}\n        >\n          friends\n        </button>\n        <button\n          onClick={switchE}\n          className={`${\n            switchElements === \"achievements\" && \"underline_animation\"\n          }`}\n        >\n          achievements\n        </button>\n      </div>\n      <div className=\"profile_details_data\">\n        {switchElements === \"stats\" && <Stats />}\n        {switchElements === \"friends\" && (\n          <Friends whichProfile={whichProfile} />\n        )}\n        {switchElements === \"achievements\" && (\n          <Achievements whichProfile={whichProfile} />\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;;AAQe,SAAS,eAAe,EACrC,YAAY,EAGb;;IACC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,0KAAS;IAErD,2KAAU;QACR,kBAAkB;IACpB,GAAG;QAAC;KAAa;IAEjB,MAAM,UAAU,CAAC;QACf,kBAAkB,EAAE,aAAa,CAAC,WAAW,IAAI;IACnD;IACA,qBACE,wLAAC;QAAI,WAAU;;0BACb,wLAAC;gBAAI,WAAU;;kCACb,wLAAC;wBACC,SAAS;wBACT,WAAW,CAAC,EAAE,mBAAmB,WAAW,sBAAsB,CAAC;kCACpE;;;;;;kCAID,wLAAC;wBACC,SAAS;wBACT,WAAW,CAAC,EAAE,mBAAmB,aAAa,sBAAsB,CAAC;kCACtE;;;;;;kCAGD,wLAAC;wBACC,SAAS;wBACT,WAAW,CAAC,EACV,mBAAmB,kBAAkB,sBACtC,CAAC;kCACH;;;;;;;;;;;;0BAIH,wLAAC;gBAAI,WAAU;;oBACZ,mBAAmB,yBAAW;;;;;oBAC9B,mBAAmB,2BAClB;wBAAS,cAAc;;;;;;oBAExB,mBAAmB,gCAClB;wBAAc,cAAc;;;;;;;;;;;;;;;;;;AAKtC;GAlDwB;KAAA"}},
    {"offset": {"line": 1179, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1184, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/LoadingPaddle.tsx"],"sourcesContent":["import React from \"react\";\nimport \"./globals.css\";\nfunction LoadingPaddle() {\n  return (\n    <div className=\"container\">\n      <div className=\"bat\">\n        <div className=\"handle\">\n          <div className=\"inner\"></div>\n        </div>\n        <div className=\"front\"></div>\n      </div>\n      <div className=\"ball\"></div>\n    </div>\n  );\n}\n\nexport default LoadingPaddle;\n"],"names":[],"mappings":";;;;;;;AAEA,SAAS;IACP,qBACE,wLAAC;QAAI,WAAU;;0BACb,wLAAC;gBAAI,WAAU;;kCACb,wLAAC;wBAAI,WAAU;kCACb,cAAA,wLAAC;4BAAI,WAAU;;;;;;;;;;;kCAEjB,wLAAC;wBAAI,WAAU;;;;;;;;;;;;0BAEjB,wLAAC;gBAAI,WAAU;;;;;;;;;;;;AAGrB;KAZS;uCAcM"}},
    {"offset": {"line": 1243, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1248, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/profile/page.tsx"],"sourcesContent":["\"use client\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./Profile.css\";\n\nimport { MdOutlineEdit, MdContentCopy } from \"react-icons/md\";\nimport ProfileDetails from \"./ProfileDetails\";\nimport Image from \"next/image\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { loggedUser } from \"../Atoms/logged\";\nimport { userToken } from \"../Atoms/userToken\";\nimport { PiCurrencyEthFill } from \"react-icons/pi\";\nimport { useRouter } from \"next/navigation\";\nimport LoadingPaddle from \"../LoadingPaddle\";\nimport { selectedFriendProfile } from \"../Atoms/selectedFriendProfile\";\n\nconst Profile = () => {\n  const uidRef = useRef<HTMLDivElement>(null);\n  const [loading, setLoading] = useState(false);\n\n  const loggedU = useRecoilValue(loggedUser);\n  const userTok = useRecoilValue(userToken);\n  const route = useRouter();\n  const [userData, setUserData] = useState<any>({});\n  const [selectedProfile, setSelectedProfile] = useRecoilState(\n    selectedFriendProfile\n  );\n\n  /////// kyan moxkiiiiiiiil\n  //////  setSelectedProfile(-1);   <------------ gado\n  //////////////////////////\n  useEffect(() => {\n    const getUserData = async () => {\n      try {\n        setLoading(true);\n        const res = await fetch(`http://localhost:3000/users/${loggedU}`, {\n          headers: {\n            Authorization: `Bearer ${userTok}`,\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        const data = await res.json();\n        setTimeout(() => {\n          setUserData(data);\n          setLoading(false);\n        }, 1000);\n      } catch (error: any) {\n        setLoading(false);\n      }\n    };\n    getUserData();\n  }, []);\n\n  return loading ? (\n    <LoadingPaddle />\n  ) : (\n    <div className=\"profile_container\">\n      <div\n        style={{\n          backgroundImage: `linear-gradient(\n          77deg,\n          rgba(0, 0, 0, 1) 30%,\n          rgba(255, 255, 255, 0) 100%\n        ), url(http://localhost:3000/bn${userData?.banner})`,\n        }}\n        className=\"user_account\"\n      >\n        <div onClick={() => route.push(\"settings\")} className=\"edit_label\">\n          <span>Edit</span>\n          <MdOutlineEdit />\n        </div>\n\n        <div className=\"img_container_add\">\n          <Image\n            src={`http://localhost:3000/av/${userData?.avatar}`}\n            width={2000}\n            height={2000}\n            alt=\"profile_avatar\"\n            className=\"profile_photo\"\n          />\n        </div>\n\n        <div className=\"profile_data\">\n          <h1>{userData?.username}</h1>\n          <h4 className=\"profile_username\">\n            <PiCurrencyEthFill /> {userData?.wallet}\n          </h4>\n          <h4 className=\"profile_email\">{userData?.email}</h4>\n          <h2 className=\"profile_user_lvl\">\n            LVL <span>{userData?.level}</span>\n          </h2>\n        </div>\n\n        <div className=\"profile_progress\">\n          <div className=\"progress\">\n            <div\n              style={{\n                width: `${userData?.level + 50}%`,\n              }}\n              className=\"pseudoProgress\"\n            ></div>\n          </div>\n          <div\n            //  onClick={copyUID}\n\n            ref={uidRef}\n            className=\"profile_uid\"\n          >\n            {userData?.uid}\n            <MdContentCopy />\n          </div>\n        </div>\n      </div>\n      <div className=\"profile_details\">\n        <ProfileDetails whichProfile={loggedU} />\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n\n// const copyUID = () => {\n//   return;\n//   if (uidRef.current) {\n//     const textToCopy = uidRef.current.textContent || \"\";\n\n//     navigator.clipboard\n//       .writeText(textToCopy)\n//       .then(() => {\n//         console.log(\"Text copied to clipboard:\", textToCopy);\n//       })\n//       .catch((error) => {\n//         console.error(\"Unable to copy text to clipboard\", error);\n//       });\n//   }\n// };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;AAeA,MAAM,UAAU;;IACd,MAAM,SAAS,wKAAuB;IACtC,MAAM,CAAC,SAAS,WAAW,GAAG,0KAAS;IAEvC,MAAM,UAAU;IAChB,MAAM,UAAU;IAChB,MAAM,QAAQ;IACd,MAAM,CAAC,UAAU,YAAY,GAAG,0KAAc,CAAC;IAC/C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG;IAI9C,0BAA0B;IAC1B,oDAAoD;IACpD,0BAA0B;IAC1B,2KAAU;QACR,MAAM,cAAc;YAClB,IAAI;gBACF,WAAW;gBACX,MAAM,MAAM,MAAM,MAAM,CAAC,4BAA4B,EAAE,QAAQ,CAAC,EAAE;oBAChE,SAAS;wBACP,eAAe,CAAC,OAAO,EAAE,QAAQ,CAAC;wBAClC,gBAAgB;oBAClB;gBACF;gBACA,MAAM,OAAO,MAAM,IAAI,IAAI;gBAC3B,WAAW;oBACT,YAAY;oBACZ,WAAW;gBACb,GAAG;YACL,EAAE,OAAO,OAAY;gBACnB,WAAW;YACb;QACF;QACA;IACF,GAAG,EAAE;IAEL,OAAO,wBACL;;;;6BAEA,wLAAC;QAAI,WAAU;;0BACb,wLAAC;gBACC,OAAO;oBACL,iBAAiB,CAAC;;;;uCAIW,EAAE,UAAU,OAAO,CAAC,CAAC;gBACpD;gBACA,WAAU;;kCAEV,wLAAC;wBAAI,SAAS,IAAM,MAAM,IAAI,CAAC;wBAAa,WAAU;;0CACpD,wLAAC;0CAAK;;;;;;0CACN;;;;;;;;;;;kCAGF,wLAAC;wBAAI,WAAU;kCACb,cAAA;4BACE,KAAK,CAAC,yBAAyB,EAAE,UAAU,OAAO,CAAC;4BACnD,OAAO;4BACP,QAAQ;4BACR,KAAI;4BACJ,WAAU;;;;;;;;;;;kCAId,wLAAC;wBAAI,WAAU;;0CACb,wLAAC;0CAAI,UAAU;;;;;;0CACf,wLAAC;gCAAG,WAAU;;kDACZ;;;;;oCAAqB;oCAAE,UAAU;;;;;;;0CAEnC,wLAAC;gCAAG,WAAU;0CAAiB,UAAU;;;;;;0CACzC,wLAAC;gCAAG,WAAU;;oCAAmB;kDAC3B,wLAAC;kDAAM,UAAU;;;;;;;;;;;;;;;;;;kCAIzB,wLAAC;wBAAI,WAAU;;0CACb,wLAAC;gCAAI,WAAU;0CACb,cAAA,wLAAC;oCACC,OAAO;wCACL,OAAO,CAAC,EAAE,UAAU,QAAQ,GAAG,CAAC,CAAC;oCACnC;oCACA,WAAU;;;;;;;;;;;0CAGd,wLAAC;gCACC,qBAAqB;gCAErB,KAAK;gCACL,WAAU;;oCAET,UAAU;kDACX;;;;;;;;;;;;;;;;;;;;;;;0BAIN,wLAAC;gBAAI,WAAU;0BACb,cAAA;oBAAgB,cAAc;;;;;;;;;;;;;;;;;AAItC;GAtGM;;;;;;;;KAAA;uCAwGS;;;CAEf,0BAA0B;CAC1B,YAAY;CACZ,0BAA0B;CAC1B,2DAA2D;CAE3D,0BAA0B;CAC1B,+BAA+B;CAC/B,sBAAsB;CACtB,gEAAgE;CAChE,WAAW;CACX,4BAA4B;CAC5B,oEAAoE;CACpE,YAAY;CACZ,MAAM;CACN,KAAK"}},
    {"offset": {"line": 1522, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}